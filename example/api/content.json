{
   "swagger": "2.0",
   "info": {
      "version": "1.0.0",
      "title": "Content API",
      "description": "This is Infrashop Content API documentation. Here you will find operations to manage your website contet. You will be able to manage dynamic content, banners, static content (like images and css) and other."
   },
   "schemes": [
      "https"
   ],
   "basePath": "/ifc-content-api",
   "produces": [
      "application/json"
   ],
   "consumes": [
      "application/json"
   ],
   "tags": [
      {
         "name": "Authentication API",
         "description": "<br><font size=\"2\">Plain and simple authentication API. Just call it providing your username and password to retrieve your access token and your profile rights within Infracommerce Content API. Use this token in all other API calls in Authorization header.<\/font>"
      },
      {
         "name": "Content API",
         "description": "<br><font size=\"2\">Content API operations allow you to manage dynamic content. These code snippets are inserted in scpecific areas of the website, and rendered as-is. It can be a HTML, js function, json string or anyting that you need to insert at a specific area in the website.<\/font>"
      },
      {
         "name": "Static Support API",
         "description": "<br><font size=\"2\">Static support API operations will allow you to manage static constant, like js files, css files, fonts, etc. You will be able to upload your files.<\/font>"
      },
      {
         "name": "Banner API",
         "description": "<br><font size=\"2\"> The Banner API operations will allow you to manage banner into Infrashop platform. You will be able create a new banner, update the banner information, delete a banner and retrieve the banners.<\/font>"
      },
      {
         "name": "Banner Templates API",
         "description": "<br><font size=\"2\"> The Banner Templates API operations will allow you to manage banner templates in Infrashop platform. A Banner template consists of a skeleton and a set of attributes that will be filled every time a banner is created.<\/font>"
      },
      {
         "name": "Banner Tag API",
         "description": "<br><font size=\"2\"> The Banner Tag API operations that will allow you to manage the banner/tag relations in the Infrashop platform. You will be able create, update , delete and retrieve the banner/tag relations. <\/font>"
      },
       {
         "name": "Banner Level API",
         "description": "<br><font size=\"2\"> The Banner Level API operation will allow you to manage the relations between banner and levels, by retrieving, adding, updating and deleting relations.<\/font>"
      },
       {
         "name": "Banner Keywords API",
         "description": "<br><font size=\"2\"> The Banner Keyword API operations will allow you to manage banner keyword into Infrashop platform. You will be able create a new banner keyword, update the banner keyword information, delete a banner keyword and retrieve the banners keyword. <\/font>"
      },
      {
         "name": "Banner Multiple Position API",
         "description": "<br><font size=\"2\"> The Banner Multiple Position API operation will allow you to manage the relations between banner and position, by retrieve, save, update and delete. <\/font>"
      },
      {
         "name": "Banner Position API",
         "description": "<br><font size=\"2\"> The Banner Position API operations will allow you to manage banner position into Infrashop platform. You will be able create a new banner position, update the banner position information, delete a banner position and retrieve the banners position. <\/font>"
      },
      {
         "name": "Campaign API",
         "description": "<br><font size=\"2\"> The Campaign API operations will allow you to manage campaign into Infrashop platform. You will be able create a new campaign, update the campaign information, delete a campaign and retrieve the campaigns.<\/font>"
      },
      {
         "name": "General Parameter API",
         "description": "<br><font size=\"2\"> The General Parameter API operations will allow you to manage general parameter into Infrashop platform. You will be able to retrieve and update the general parameter informations. Additionally, it's also possible to retrieve the groups and value types available to the general parameter functionalities. <\/font>"
      },
      {
         "name": "Image Types API",
         "description": "<br><font size=\"2\"> Image types API operations will allow you to manage image types in Infrashop platform. An image type defines a target size and compression ration when resizind an image. Image type \"SRC\" is reserved and cannot be manage by API operations.<\/font>"
      },
      {
         "name": "Rating API",
         "description": "<br><font size=\"2\">In this group you will find API operations that you will call in order to manage the ratings. Are some of the operations here included: retriving rating data and changing rating status.<\/font>"
      },
      {
         "name": "Sale Channels API",
         "description": "<br><font size=\"2\"> The Sale Channels API operations will allow you to manage the sale channels data doing actions like fetching, updating or inserting data.<\/font>"
      },
      {
         "name": "Sheet API",
         "description": "<br><font size=\"2\"> The Sheet API operations will allow you to generates a Master Product SKU list export asynchronously.<\/font>"
      },
      {
         "name": "Stats API",
         "description": "<br><font size=\"2\"> The Stats API have the responsibility to return values used to make any statistical calculation. <\/font>"
      },
      {
         "name": "User Defined Attributes (UDA) API",
         "description": "<br><font size=\"2\">In this group you will find operations that allow you to interact with Infrashop  user defined attributes (UDA) operations engine. This APIs allow you to manage all the UDAs of a product or a SKU.<\/font>"
      },
      {
         "name": "Level Management API - Sheet",
         "description": "<br><font size=\"2\">In this group are listed operations that allow the download and upload of spreadsheets containing informations related to the website's levels. The downloaded spreadsheet will contain all informations related to the current level records. The submitted spreadsheet must contain all informations related to the website's levels which will result in creations and/or updates of the current level records which, in turn, will be reflected in the website.<\/font>"
      },
      {
         "name": "Level Management API",
         "description": "<br><font size=\"2\">In this group are listed operations that allow the website's level management such as: Create new levels, get levels data, update existing levels and delete levels.<\/font>"
      },
      {
         "name": "Related Type Management API",
         "description": "<br><font size=\"2\">In this group are listed operations that allow you to manage all the related types, this are use to create relationships between entities such as SKUs.<\/font>"
      },
      {
         "name": "Message Template API",
         "description": "<br><font size=\"2\">In this group are listed operations that allow the message templates management such as: Create new message templates, get message template data, update existing message template and delete message template.<\/font>"
      },
      {
         "name": "Message Attributes API",
         "description": "<br><font size=\"2\">In this group are listed operations that allow the message attributes management such as: Create new message attribute, get message attribute data, update existing message attribute and delete a message attribute.<\/font>"
      },
      {
         "name": "Tag API",
         "description": "<br><font size=\"2\"> The Tag API."
      }
   ],
   "paths": {
      "/oauth/token": {
         "$ref": "./api/auth.json#/paths/AUTH"
      },
      "/v1/content": {
         "get": {
            "tags": [
               "Content API"
            ],
            "summary": "Retrieve dynamic content",
            "description": "Retrieve dynamic content.",
            "parameters": [
               {
                  "name": "page",
                  "in": "query",
                  "required": false,
                  "type": "number",
                  "default": 0,
                  "description": "Page number. Starts with 0. This number has no decimal places."
               },
               {
                  "name": "size",
                  "in": "query",
                  "required": false,
                  "type": "number",
                  "default": 20,
                  "description": "The maximum number of records to retrieve. If not provided, a default value is used. This number has no decimal places."
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Dynamic content list",
                  "schema": {
                     "$ref": "#/definitions/ContentPagination"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               }
            }
         },
         "post": {
            "tags": [
               "Content API"
            ],
            "summary": "Create a new dynamic content",
            "description": "Creates a new dynamic content. contentId is optional. If it is not provided, a numeric unique ID will be provided.",
            "parameters": [
               {
                  "name": "body",
                  "in": "body",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/Content"
                  }
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Newly created content.",
                  "schema": {
                     "$ref": "#/definitions/Content"
                  }
               },
               "400": {
                  "description": "Invalid data provided. Please check error messages for more details.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "409": {
                  "description": "There is already a content using this contentId.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               }
            }
         }
      },
      "/v1/content/{contentId}": {
         "get": {
            "tags": [
               "Content API"
            ],
            "summary": "Retrieve a dynamic content by its ID",
            "description": "Retrieve content based on its ID.",
            "parameters": [
               {
                  "name": "contentId",
                  "in": "path",
                  "required": true,
                  "type": "string",
                  "description": "Content unique identifier."
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Dynamic content",
                  "schema": {
                     "$ref": "#/definitions/Content"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Content not found"
               }
            }
         },
         "put": {
            "tags": [
               "Content API"
            ],
            "summary": "Updates a preexisting dynamic content",
            "description": "Updates a preexisting dynamic content. contentId is optionsl. If it is not provided, a numeric unique ID will be provided.",
            "parameters": [
               {
                  "name": "contentId",
                  "in": "path",
                  "required": true,
                  "type": "string",
                  "description": "Content unique identifier."
               },
               {
                  "name": "body",
                  "in": "body",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/Content"
                  }
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Newly created content.",
                  "schema": {
                     "$ref": "#/definitions/Content"
                  }
               },
               "400": {
                  "description": "Invalid content info. Please check error message for more info.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Content not found"
               }
            }
         },
         "delete": {
            "tags": [
               "Content API"
            ],
            "summary": "Deletes a preexisting dynamic content",
            "description": "Deletes a preexisting dynamic content. ",
            "parameters": [
               {
                  "name": "contentId",
                  "in": "path",
                  "required": true,
                  "type": "string",
                  "description": "Content unique identifier."
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "204": {
                  "description": "Content successfuly deleted"
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Content not found"
               }
            }
         }
      },
      "/v1/banners": {
         "get": {
            "tags": [
               "Banner API"
            ],
            "summary": "Retrieves all banners",
            "description": "Retrieves all banners, the response includes active, advancedEdition, bannerAttributes, bannerId, bannerLink, bannerTemplateId, bannerTitle, campaignId, content, endDate, keywords, levels, name, positions, priority, startDate, tags, webAnalyticsId.<h4>Required Functionalities<\/h4>Gestão de Conteudo - Gestão do Banners - Conteudo do Banner em Modo Avançado",
            "parameters": [
               {
                  "name": "page",
                  "in": "query",
                  "required": false,
                  "type": "integer",
                  "default": 0,
                  "description": "Page number. Starts with 0. This number has no decimal places."
               },
               {
                  "name": "size",
                  "in": "query",
                  "required": false,
                  "type": "integer",
                  "default": 20,
                  "description": "Page size. Cannot be higher than 20. This number has no decimal places."
               },
               {
                  "name": "bannerId",
                  "in": "query",
                  "required": false,
                  "type": "integer",
                  "description": "The banner identification. This number has no decimal places."
               },
               {
                  "name": "bannerTemplateId",
                  "in": "query",
                  "required": false,
                  "type": "integer",
                  "description": "The banner template identification. This number has no decimal places."
               },
               {
                  "name": "name",
                  "in": "query",
                  "required": false,
                  "type": "string",
                  "description": "The name of the banner."
               },
               {
                  "name": "campaignId",
                  "in": "query",
                  "required": false,
                  "type": "integer",
                  "description": "The campaign identifier associated with this banner. This number has no decimal places."
               },
               {
                  "name": "levels",
                  "in": "query",
                  "required": false,
                  "type": "integer",
                  "description": "The level identifier associated with this banner. This number has no decimal places."
               },
               {
                  "name": "bannerLink",
                  "in": "query",
                  "required": false,
                  "type": "string",
                  "description": "The URL that the user will be redirect when click on banner."
               },
               {
                  "name": "bannerTitle",
                  "in": "query",
                  "required": false,
                  "type": "string",
                  "description": "The title that appears when the user hover over the banner."
               },
               {
                  "name": "startDate",
                  "in": "query",
                  "required": false,
                  "type": "string",
                  "format": "date-time",
                  "description": "The initial date that the banner is available. For example: 2016-08-30T14:19:10.265Z."
               },
               {
                  "name": "endDate",
                  "in": "query",
                  "required": false,
                  "type": "string",
                  "format": "date-time",
                  "description": "The final date that the banner is available. For example: 2016-08-30T14:19:10.265Z."
               },
               {
                  "name": "keywords",
                  "in": "query",
                  "required": false,
                  "type": "string",
                  "description": "The keywords of the banner."
               },
               {
                  "name": "tags",
                  "in": "query",
                  "required": false,
                  "type": "string",
                  "description": "The tags of the banner."
               },
               {
                  "name": "positions",
                  "in": "query",
                  "required": false,
                  "type": "string",
                  "description": "The positions of the banner."
               },
               {
                  "name": "priority",
                  "in": "query",
                  "required": false,
                  "type": "integer",
                  "description": "The banner priority. This number has no decimal places."
               },
               {
                  "name": "active",
                  "in": "query",
                  "required": false,
                  "type": "string",
                  "description": "The flag to indicate if the banner is activate or inactive on site = ['Y', 'N']",
                  "enum": [
                     "Y",
                     "N"
                  ]
               },
               {
                  "name": "content",
                  "in": "query",
                  "required": false,
                  "type": "string",
                  "description": "Represents the HTML content of banner on site."
               },
               {
                  "name": "advancedEdition",
                  "in": "query",
                  "required": false,
                  "type": "string",
                  "description": "Flag that indicates if a banner content will be defined by content attribute = ['Y', 'N'].",
                  "enum": [
                     "Y",
                     "N"
                  ]
               },
               {
                  "name": "webAnalyticsId",
                  "in": "query",
                  "required": false,
                  "type": "string",
                  "description": "The Web Analytics id is a unique identifier for the Web Analytics associated with this banner."
               },
               {
                  "name": "bannerAttributes",
                  "in": "query",
                  "required": false,
                  "type": "string",
                  "description": "All banner attributes to be defined."
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "An array of banner",
                  "schema": {
                     "$ref": "#/definitions/BannerPagination"
                  }
               },
               "400": {
                  "description": "Invalid parameter. Please check error message for more info.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               }
            }
         },
         "post": {
            "tags": [
               "Banner API"
            ],
            "summary": "Create a new Banner",
            "description": "Create a new Banner on Infrashop, this operation allow to create a new banner with all information to show your banner on the website<h4>Required Functionalities<\/h4>Gestão de Conteudo - Gestão do Banners - Conteudo do Banner em Modo Avançado",
            "parameters": [
               {
                  "name": "body",
                  "in": "body",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/Banner"
                  }
               }
            ],
            "responses": {
               "201": {
                  "description": "The banner created",
                  "schema": {
                     "$ref": "#/definitions/Banner"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               }
            }
         }
      },
      "/v1/banners/{bannerId}": {
         "get": {
            "tags": [
               "Banner API"
            ],
            "summary": "Retrieve  banner by id",
            "description": "Gets a specific banner template by id.<h4>Required Functionalities<\/h4>Gestão de Conteudo - Gestão do Banners - Conteudo do Banner em Modo Avançado",
            "parameters": [
               {
                  "name": "bannerId",
                  "in": "path",
                  "required": true,
                  "type": "number",
                  "description": "The banner id is a unique identifier for the banner. This number has no decimal places."
               }
            ],
            "responses": {
               "200": {
                  "description": "The banner information success requested",
                  "schema": {
                     "$ref": "#/definitions/Banner"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Banner not found"
               }
            }
         },
         "put": {
            "tags": [
               "Banner API"
            ],
            "summary": "Update a specific banner by id",
            "description": "Update a specific banner by id.<h4>Required Functionalities<\/h4>Gestão de Conteudo - Gestão do Banners - Conteudo do Banner em Modo Avançado",
            "parameters": [
               {
                  "name": "body",
                  "in": "body",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/Banner"
                  }
               },
               {
                  "name": "bannerId",
                  "in": "path",
                  "required": true,
                  "type": "number",
                  "description": "The banner id is a unique identifier for the banner. This number has no decimal places."
               }
            ],
            "responses": {
               "200": {
                  "description": "The banner information success requested",
                  "schema": {
                     "$ref": "#/definitions/Banner"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Banner not found"
               }
            }
         },
         "delete": {
            "tags": [
               "Banner API"
            ],
            "summary": "Delete a specific banner",
            "description": "Delete a specific banner by id.<h4>Required Functionalities<\/h4>Gestão de Conteudo - Gestão do Banners - Conteudo do Banner em Modo Avançado",
            "parameters": [
               {
                  "name": "bannerId",
                  "in": "path",
                  "required": true,
                  "type": "number",
                  "description": "The banner id is a unique identifier for the banner. This number has no decimal places."
               }
            ],
            "responses": {
               "204": {
                  "description": "Banner successfuly deleted"
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Banner not found"
               }
            }
         }
      },
      "/v1/banners/{bannerId}/tags": {
         "get": {
            "tags": [
               "Banner Tag API"
            ],
            "summary": "Retrieve all tags related to the banner",
            "description": "Find all tags related to the specified banner.<h4>Required Functionalities</h4> Gestão de Conteudo - Gestão do Banners - Consultar",
            "parameters": [
               {
                  "name": "bannerId",
                  "in": "path",
                  "required": true,
                  "type": "integer",
                  "description": "The banner id is a unique identifier for the banner. This number has no decimal places."
               }
            ],
            "responses": {
               "200": {
                  "description": "The tags related to the banner.",
                  "schema": {
                     "type": "array",
                     "items": {
                        "type": "string"
                     },
                     "example": [
                        "banner-tag-top",
                        "banner-tag-bottom"
                     ]
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Banner not found"
               }
            }
         },
         "post": {
            "tags": [
               "Banner Tag API"
            ],
            "summary": "Create the banner tag relations",
            "description": "Create new banner/tag relations, replacing all the previous ones.<h4>Required Functionalities</h4> Gestão de Conteudo - Gestão do Banners - Gravar",
            "parameters": [
               {
                  "name": "bannerId",
                  "in": "path",
                  "required": true,
                  "type": "integer",
                  "description": "The banner id is a unique identifier for the banner. This number has no decimal places."
               },
               {
                  "name": "bannerTags",
                  "in": "body",
                  "required": true,
                  "type": "array",
                  "items": {
                     "type": "string"
                  },
                  "description": "The banner tags to be related to the banner."
               }
            ],
            "responses": {
               "201": {
                  "description": "The tags related to the banner.",
                  "schema": {
                     "type": "array",
                     "items": {
                        "type": "string"
                     },
                     "example": [
                        "banner-tag-top",
                        "banner-tag-bottom"
                     ]
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Banner not found"
               }
            }
         },
          "put": {
            "tags": [
               "Banner Tag API"
            ],
            "summary": "Append banner tag relations",
            "description": "Insert new banner/tag relations, maintaining the previous ones.<h4>Required Functionalities</h4> Gestão de Conteudo - Gestão do Banners - Gravar",
            "parameters": [
               {
                  "name": "bannerId",
                  "in": "path",
                  "required": true,
                  "type": "integer",
                  "description": "The banner id is a unique identifier for the banner. This number has no decimal places."
               },
               {
                  "name": "bannerTags",
                  "in": "body",
                  "required": true,
                  "type": "array",
                  "items": {
                     "type": "string"
                  },
                  "description": "The banner tags to be related to the banner."
               }
            ],
            "responses": {
               "200": {
                  "description": "The tags related to the banner.",
                  "schema": {
                     "type": "array",
                     "items": {
                        "type": "string"
                     },
                     "example": [
                        "banner-tag-top",
                        "banner-tag-bottom"
                     ]
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Banner not found"
               }
            }
         }
      },
      "/v1/banners/{bannerId}/tags/{bannerTags}": {
         "delete": {
            "tags": [
               "Banner Tag API"
            ],
            "summary": "Delete banner tags relations",
            "description": "Delete one or more banner/tag relation.<h4>Required Functionalities</h4> Gestão de Conteudo - Gestão do Banners - Gravar",
            "parameters": [
               {
                  "name": "bannerId",
                  "in": "path",
                  "required": true,
                  "type": "integer",
                  "description": "The banner id is a unique identifier for the banner. This number has no decimal places."
               },
               {
                  "name": "bannerTags",
                  "in": "path",
                  "required": true,
                  "type": "array",
                  "items": {
                     "type": "string"
                  },
                  "description": "The banner tags to delete relation with the banner."
               }
            ],
            "responses": {
               "204": {
                  "description": "Banner tags successfully deleted."
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Banner not found"
               }
            }
         }
      },
      "/v1/banners/{bannerId}/keywords": {
         "get": {
            "tags": [
               "Banner Keywords API"
            ],
            "summary": "Retrieves all keywords related with the banner",
            "description": "Retrieves all keywords related with the banner.<h4>Required Functionalities</h4> Gestão de Conteudo - Gestão do Banners - Consultar",
            "parameters": [
               {
                  "name": "bannerId",
                  "in": "path",
                  "required": true,
                  "type": "integer",
                  "format": "int64",
                  "description": "The banner id is a unique identifier for the banner. This number has no decimal places."
               }
            ],
            "responses": {
               "200": {
                  "description": "The keywords related to the banner.",
                  "schema": {
                     "type": "array",
                     "items": {
                        "type": "string"
                     },
                     "example": [
                        "cats",
                        "promotion"
                     ]
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Banner not found"
               }
            }
         },
         "post": {
            "tags": [
               "Banner Keywords API"
            ],
            "summary": "Create relations for Banner with list of keywords received",
            "description": "Create relations for Banner with list of keywords received.<h4>Required Functionalities</h4> Gestão de Conteudo - Gestão do Banners - Gravar",
            "parameters": [
               {
                  "name": "bannerId",
                  "in": "path",
                  "required": true,
                  "type": "integer",
                  "format": "int64",
                  "description": "The banner id is a unique identifier for the banner. This number has no decimal places."
               },
               {
                  "name": "keywords",
                  "in": "path",
                  "required": true,
                  "type": "array",
                  "items": {
                     "type": "string"
                  },
                  "description": "The banner keywords to delete relation with the banner."
               }
            ],
            "responses": {
               "201": {
                  "description": "The keywords related to the banner.",
                  "schema": {
                     "type": "array",
                     "items": {
                        "type": "string"
                     },
                     "example": [
                        "cats",
                        "promotion"
                     ]
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Banner not found"
               }
            }
         },
          "put": {
            "tags": [
               "Banner Keywords API"
            ],
            "summary": "Update the list of keywords related with banner",
            "description": "Update the list of keywords related with banner by the banner id.<h4>Required Functionalities</h4> Gestão de Conteudo - Gestão do Banners - Gravar",
            "parameters": [
               {
                  "name": "bannerId",
                  "in": "path",
                  "required": true,
                  "type": "integer",
                  "format": "int64",
                  "description": "The banner id is a unique identifier for the banner. This number has no decimal places."
               },
               {
                  "name": "keywords",
                  "in": "path",
                  "required": true,
                  "type": "array",
                  "items": {
                     "type": "string"
                  },
                  "description": "The banner keywords to delete relation with the banner."
               }
            ],
            "responses": {
               "200": {
                  "description": "The keywords related to the banner.",
                  "schema": {
                     "type": "array",
                     "items": {
                        "type": "string"
                     },
                    "example": [
                        "cats",
                        "promotion"
                     ]
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Banner not found"
               }
            }
         }
      },
      "/v1/banners/{bannerId}/keywords/{keyword}": {
         "delete": {
            "tags": [
               "Banner Keywords API"
            ],
            "summary": "Delete a list of keywords related with Banner",
            "description": "Delete a list of keywords related with Banner by the banner identification.<h4>Required Functionalities</h4> Gestão de Conteudo - Gestão do Banners - Gravar",
            "parameters": [
               {
                  "name": "bannerId",
                  "in": "path",
                  "required": true,
                  "type": "integer",
                  "format": "int64",
                  "description": "The banner id is a unique identifier for the banner. This number has no decimal places."
               },
               {
                  "name": "keywords",
                  "in": "path",
                  "required": true,
                  "type": "array",
                  "items": {
                     "type": "string"
                  },
                  "description": "The banner keywords to delete relation with the banner."
               }
            ],
            "responses": {
               "204": {
                  "description": "Banner keywords successfully deleted."
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Banner not found"
               }
            }
         }
      },
      "/v1/banners/{bannerId}/levels": {
         "get": {
            "tags": [
               "Banner Level API"
            ],
            "summary": "Retrieves all levels",
            "description": "Retrieves all levels informations.<h4>Required Functionalities<\/h4>Gestão de Conteudo - Gestão do Banners - Consultar",
            "parameters": [
               {
                  "name": "bannerId",
                  "in": "path",
                  "required": true,
                  "type": "integer",
                  "format": "int64",
                  "description": "The banner id is a unique identifier for the banner. This number has no decimal places."
               }
            ],
            "responses": {
               "200": {
                  "description": "The list of levels informations",
                  "schema": {
                     "$ref": "#/definitions/LevelList"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Banner not found"
               }
            }
         },
         "post": {
            "tags": [
               "Banner Level API"
            ],
            "summary": "Creates a new relation between banner and level",
            "description": "Delete the old relations and creates new relations between banner and levels.<h4>Required Functionalities<\/h4>Gestão de Conteudo - Gestão do Banners - Gravar",
            "parameters": [
               {
                  "name": "body",
                  "in": "body",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/LevelList"
                  }
               },
               {
                  "name": "bannerId",
                  "in": "path",
                  "required": true,
                  "type": "integer",
                  "format": "int64",
                  "description": "The banner id is a unique identifier for the banner. This number has no decimal places."
               }
            ],
            "responses": {
               "201": {
                  "description": "The list of levels informations",
                  "schema": {
                     "$ref": "#/definitions/LevelList"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Banner or Level not found"
               }
            }
         },
         "put": {
            "tags": [
               "Banner Level API"
            ],
            "summary": "Creates new relations between banner and levels",
            "description": "Creates new relations between banner and levels.<h4>Required Functionalities<\/h4>Gestão de Conteudo - Gestão do Banners - Gravar",
            "parameters": [
               {
                  "name": "body",
                  "in": "body",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/LevelList"
                  }
               },
               {
                  "name": "bannerId",
                  "in": "path",
                  "required": true,
                  "type": "integer",
                  "format": "int64",
                  "description": "The banner id is a unique identifier for the banner. This number has no decimal places."
               }
            ],
            "responses": {
               "200": {
                  "description": "The list of levels informations",
                  "schema": {
                     "$ref": "#/definitions/LevelList"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Banner or Level not found"
               }
            }
         }
      },
      "/v1/banners/{bannerId}/level/{levelId}": {
         "get": {
            "tags": [
               "Banner Level API"
            ],
            "summary": "Retrieve level by level identification and banner identification",
            "description": "Retrieve level by level identification and banner identification. <h4>Required Functionalities<\/h4>Gestão de Conteudo - Gestão do Banners - Consultar",
            "parameters": [
               {
                  "name": "bannerId",
                  "in": "path",
                  "required": true,
                  "type": "integer",
                  "format": "int64",
                  "description": "The banner id is a unique identifier for the banner. This number has no decimal places."
               },
               {
                  "name": "levelId",
                  "in": "path",
                  "required": true,
                  "type": "integer",
                  "format": "int64",
                  "description": "The level id is a unique identifier for the level. This number has no decimal places."
               }
            ],
            "responses": {
               "200": {
                  "description": "The level information",
                  "schema": {
                     "$ref": "#/definitions/Level"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Banner, Level or relation not found"
               }
            }
         },
         "delete": {
            "tags": [
               "Banner Level API"
            ],
            "summary": "Delete a list of banner levels",
            "description": "Delete a list of banner levels by banner identification and level identifications. <h4>Required Functionalities<\/h4>Gestão de Conteudo - Gestão do Banners - Gravar",
            "parameters": [
               {
                  "name": "bannerId",
                  "in": "path",
                  "required": true,
                  "type": "integer",
                  "format": "int64",
                  "description": "The banner id is a unique identifier for the banner. This number has no decimal places."
               },
               {
                  "name": "levelId",
                  "in": "path",
                  "required": true,
                  "type": "array",
                  "items": {
                     "type": "integer",
                     "format": "int64"
                  },
                  "description": "The level identification. Can be a list of ids too."
               }
            ],
            "responses": {
               "204": {
                  "description": "Relation between Banner and Levels successfuly deleted."
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Banner, Level and when the list has only one identification, the API will return 404 when the relation is not found."
               }
            }
         }
      },
      "/v1/banners/templates": {
         "get": {
            "tags": [
               "Banner Templates API"
            ],
            "summary": "Retrieves all banner templates",
            "description": "Retrieves all banner templates, the response includes the banner tamplate name, the html content used on this banner template and the attributes  that you can change in a banner template and other details about each banner template",
            "responses": {
               "200": {
                  "description": "An array of banner templates",
                  "schema": {
                     "type": "array",
                     "items": {
                        "$ref": "#/definitions/BannerTemplate"
                     }
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               }
            }
         },
         "post": {
            "tags": [
               "Banner Templates API"
            ],
            "summary": "Creates a new banner template on the platform",
            "description": "Creates a new banner template. This API operation will create a new  banner template using the posted data, difining the HTML content for banner and the attributes that can be changed on banner. Do not provide the banner template ID as it will be automatically generated for you.",
            "parameters": [
               {
                  "name": "body",
                  "in": "body",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/BannerTemplate"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Return a newly created banner template",
                  "schema": {
                     "$ref": "#/definitions/BannerTemplate"
                  }
               },
               "400": {
                  "description": "Invalid Banner Template information. Please check error message for more information"
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized. Please ensure that you have access to manage banner templates",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               }
            }
         }
      },
      "/v1/banners/templates/{bannerTemplateId}": {
         "get": {
            "tags": [
               "Banner Templates API"
            ],
            "summary": "Retrieve a specific banner template by id",
            "description": "Gets a specific banner template by id.",
            "parameters": [
               {
                  "name": "bannerTemplateId",
                  "in": "path",
                  "required": true,
                  "type": "number",
                  "description": "The banner template id is a unique identifier for the banner template. This number has no decimal places."
               }
            ],
            "responses": {
               "200": {
                  "description": "The banner template information success requested",
                  "schema": {
                     "$ref": "#/definitions/BannerTemplate"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Banner template not found"
               }
            }
         },
         "put": {
            "tags": [
               "Banner Templates API"
            ],
            "summary": "Update a specific banner template by id",
            "description": "Update provided banner template information. This API operation is supposed to be used to change basic banner template information how banner tamplate name, the html content used on this banner template and the attributes  that you can change in a banner template and other details.",
            "parameters": [
               {
                  "name": "body",
                  "in": "body",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/BannerTemplate"
                  }
               },
               {
                  "name": "bannerTemplateId",
                  "in": "path",
                  "required": true,
                  "type": "number",
                  "description": "The banner template id is a unique identifier for the banner template. This number has no decimal places."
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Return the updated banner template",
                  "schema": {
                     "$ref": "#/definitions/BannerTemplate"
                  }
               },
               "400": {
                  "description": "Invalid banner template data or trying to change data that is read only. Please check error messages for more details."
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized. Please ensure that you have access to manage banner templates",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "No banner template found for this ID."
               }
            }
         },
         "delete": {
            "tags": [
               "Banner Templates API"
            ],
            "summary": "Deletes an unique entry of banner template",
            "description": "Deletes an unique entry of banner template by id.",
            "parameters": [
               {
                  "name": "bannerTemplateId",
                  "in": "path",
                  "required": true,
                  "type": "number",
                  "description": "The banner template id is a unique identifier for the banner template. This number has no decimal places."
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "204": {
                  "description": "The banner template successfuly deleted"
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Banner template not found for this Id"
               }
            }
         }
      },
      "/v1/banners/{bannerId}/positions": {
         "get": {
            "tags": [
               "Banner Multiple Position API"
            ],
            "summary": "Retrieves all banners position related with the banner.",
            "description": "Retrieves all banners position related with the banner. <h4> Required Functionality <\/h4> Conteudo - Banner - Consultar",
            "parameters": [
               {
                  "name": "bannerId",
                  "in": "path",
                  "required": true,
                  "type": "integer",
                  "format": "int64",
                  "description": "The banner identification related with banner positions. This number has no decimal places."
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "List of banner positions",
                  "schema": {
                     "$ref": "#/definitions/BannerPositionList"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "BannerId not found."
               }
            }
         },
         "post": {
            "tags": [
               "Banner Multiple Position API"
            ],
            "summary": "Create relations for Banner with list of Banner Position received.",
            "description": "Create relations for Banner with list of Banner Position received. <h4> Required Functionality <\/h4> Conteudo - Banner - Gravar",
            "parameters": [
               {
                  "name": "body",
                  "in": "body",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/BannerPositionList"
                  }
               },
               {
                  "name": "bannerId",
                  "in": "path",
                  "required": true,
                  "type": "integer",
                  "format": "int64",
                  "description": "The banner identification related with banner positions. This number has no decimal places."
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "201": {
                  "description": "List of banner positions created.",
                  "schema": {
                     "$ref": "#/definitions/BannerPositionList"
                  }
               },
               "400": {
                  "description": "Invalid data provided. Please check error messages for more details.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "BannerId or PositionId not found."
               }
            }
         },
         "put": {
	         "tags": [
               "Banner Multiple Position API"
            ],
            "summary": "Update the list of banner positions related with banner.",
            "description": "Update the list of banner positions related with banner by the banner id. <h4> Required Functionality <\/h4> Conteudo - Banner - Gravar",
            "parameters": [
               {
                  "name": "body",
                  "in": "body",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/BannerPositionList"
                  }
               },
               {
                  "name": "bannerId",
                  "in": "path",
                  "required": true,
                  "type": "integer",
                  "format": "int64",
                  "description": "The banner identification related with banner positions. This number has no decimal places."
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "201": {
                  "description": "List of banner positions updated.",
                  "schema": {
                     "$ref": "#/definitions/BannerPositionList"
                  }
               },
               "400": {
                  "description": "Invalid data provided. Please check error messages for more details.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "BannerId or PositionId not found."
               }
            }
         }
      },
      "/v1/banners/{bannerId}/positions/{positionId}": {
         "get": {
            "tags": [
               "Banner Multiple Position API"
            ],
            "summary": "Retrieve banner position by id",
            "description": "Gets a specific banner position by id. <h4> Required Functionality <\/h4> Conteudo - Banner - Consultar",
            "parameters": [
               {
                  "name": "bannerId",
                  "in": "path",
                  "required": true,
                  "type": "integer",
                  "format": "int64",
                  "description": "The banner identification related with banner position to find."
               },
               {
                  "name": "positionId",
                  "in": "path",
                  "required": true,
                  "type": "string",
                  "description": "The position identification to find."
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Banner Position found.",
                  "schema": {
                     "$ref": "#/definitions/BannerPosition"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Banner Position not found"
               }
            }
         },
         "delete": {
            "tags": [
               "Banner Multiple Position API"
            ],
            "summary": "Delete a list of banner positions related with Banner.",
            "description": "Delete a list of banner positions related with Banner by the banner identification. <h4> Required Functionality <\/h4> Conteudo - Banner - Gravar",
            "parameters": [
               {
                  "name": "bannerId",
                  "in": "path",
                  "required": true,
                  "type": "integer",
                  "format": "int64",
                  "description": "The banner identification related with banner positions to be deleted."
               },
               {
                  "name": "positionId",
                  "in": "path",
                  "required": true,
                  "type": "array",
                  "items": {
                     "type": "string"
                  },
                  "description": "Is the list of unique identifier for the position to be deleted."
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "204": {
                  "description": "Banner Position successfuly deleted"
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "When the list has only one identification, the API will return 404 when the id is not found."
               }
            }
         }
      },
      "/v1/banners/positions": {
         "get": {
            "tags": [
               "Banner Position API"
            ],
            "summary": "Retrieves all banners position.",
            "description": "Retrieves all banners position. <h4> Required Functionality <\/h4> Conteudo - Banner - Consultar",
            "parameters": [
               {
                  "name": "page",
                  "in": "query",
                  "required": false,
                  "type": "integer",
                  "default": 0,
                  "description": "Page number. Starts with 0. This number has no decimal places."
               },
               {
                  "name": "size",
                  "in": "query",
                  "required": false,
                  "type": "integer",
                  "default": 20,
                  "description": "The maximum number of records to retrieve. If not provided, a default value is used. This number has no decimal places."
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "List of banner positions",
                  "schema": {
                     "$ref": "#/definitions/BannerPositionPaginated"
                  }
               },
               "400": {
                  "description": "Invalid data provided. Please check error messages for more details.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               }
            }
         },
         "post": {
            "tags": [
               "Banner Position API"
            ],
            "summary": "Creates a new banner position.",
            "description": "Create a new Banner Position on InfraShop. <h4> Required Functionality <\/h4> Conteudo - Banner - Gravar",
            "parameters": [
               {
                  "name": "body",
                  "in": "body",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/BannerPosition"
                  }
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "201": {
                  "description": "The banner Position created.",
                  "schema": {
                     "$ref": "#/definitions/BannerPosition"
                  }
               },
               "400": {
                  "description": "Invalid data provided. Please check error messages for more details.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               }
            }
         }
      },
      "/v1/banners/positions/{positionId}": {
         "get": {
            "tags": [
               "Banner Position API"
            ],
            "summary": "Retrieve banner position by id",
            "description": "Gets a specific banner position by id. <h4> Required Functionality <\/h4> Conteudo - Banner - Consultar",
            "parameters": [
               {
                  "name": "positionId",
                  "in": "path",
                  "required": true,
                  "type": "string",
                  "description": "The position identification to find."
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Banner Position found.",
                  "schema": {
                     "$ref": "#/definitions/BannerPosition"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Banner Position not found"
               }
            }
         },
         "delete": {
            "tags": [
               "Banner Position API"
            ],
            "summary": "Delete a specific banner position.",
            "description": "Delete a specific banner position by id. <h4> Required Functionality <\/h4> Conteudo - Banner - Gravar",
            "parameters": [
               {
                  "name": "positionId",
                  "in": "path",
                  "required": true,
                  "type": "array",
                  "items": {
                     "type": "string"
                  },
                  "description": "Is the list of unique identifier for the position to be deleted."
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "204": {
                  "description": "Banner Position successfuly deleted"
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "When the list has only one identification, the API will return 404 when the id is not found."
               }
            }
         },
         "put": {
            "tags": [
               "Banner Position API"
            ],
            "summary": "Update a banner position.",
            "description": "Update a specific banner position by id. <h4> Required Functionality <\/h4> Conteudo - Banner - Gravar",
            "parameters": [
               {
                  "name": "body",
                  "in": "body",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/BannerPosition"
                  }
               },
               {
                  "name": "positionId",
                  "in": "path",
                  "required": true,
                  "type": "string",
                  "description": "The banner position identification to be update."
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Banner Position update.",
                  "schema": {
                     "$ref": "#/definitions/BannerPosition"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Banner Position not found."
               }
            }
         }
      },
      "/v1/generalparameters": {
         "get": {
            "tags": [
               "General Parameter API"
            ],
            "summary": "Get general parameters with filters",
            "description": "Fetch general parameters filtered by its properties. <h4>Required Functionalities</h4> Gestão de Vendas - Gestão de Parametros do Sistema - Consultar",
            "parameters": [
               {
                  "name": "generalParameterId",
                  "description": "The general parameter property identification.",
                  "in": "query",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "description",
                  "description": "The general parameter property description.",
                  "in": "query",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "generalParameterGroupId",
                  "description": "The group that this general parameter belongs to.",
                  "in": "query",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "value",
                  "description": "The general parameter value.",
                  "in": "query",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "valueList",
                  "description": "The general parameter value list options, required when value type is L (list).",
                  "in": "query",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "valueType",
                  "description": "A single character that describes the value type. The most common types are B (boolean), D (date), E (encoded), I (integer), L (list), N (number), S (string) and T (time).",
                  "in": "query",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "updateDate",
                  "description": "The date when the general parameter was updated.",
                  "in": "query",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "page",
                  "required": false,
                  "default": 0,
                  "description": "Page number. Starts with 0. This number has no decimal places.",
                  "type": "integer",
                  "in": "query"
               },
               {
                  "name": "size",
                  "required": false,
                  "default": 20,
                  "description": "The maximum number of records to retrieve. If not provided, a default value is used. This number has no decimal places.",
                  "type": "integer",
                  "in": "query"
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "General parameter response.",
                  "schema": {
                     "$ref": "#/definitions/GeneralParameterPaginated"
                  }
               },
               "400": {
                  "description": "Invalid parameter. Please check error message for more information",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "401": {
                  "description": "User not authenticated.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               }
            }
         }
      },
      "/v1/generalparameters/{generalParameterIdList}": {
         "get": {
            "tags": [
               "General Parameter API"
            ],
            "summary": "Get general parameter by ID",
            "description": "Retrieve the general parameter by its identification. This API can retieve a list with a single general parameter (if only one ID is informed) or multiples (informing general parameter IDs separated by comma). <h4>Required Functionalities</h4> Gestão de Vendas - Gestão de Parametros do Sistema - Consultar",
            "parameters": [
               {
                  "name": "generalParameterIdList",
                  "description": "A single or mutiple (comma separated) general parameter identifications",
                  "in": "path",
                  "required": true,
                  "type": "array",
                  "items": {
                     "type": "string"
                  }
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "List of general parameters",
                  "schema": {
                     "type": "array",
                     "items": {
                        "$ref": "#/definitions/GeneralParameterResponse"
                     }
                  }
               },
               "400": {
                  "description": "Invalid parameter. Please check error message for more information",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "404": {
                  "description": "If the general parameter was not found. Happens only when a single identification was informed.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "401": {
                  "description": "User not authenticated.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               }
            }
         }
      },
      "/v1/generalparameters/{generalParameterIdList}/value": {
         "get": {
            "tags": [
               "General Parameter API"
            ],
            "summary": "Get general parameter values",
            "description": "Retrieve one or more general parameters, with only the value information. <h4>Required Functionalities</h4> Gestão de Vendas - Gestão de Parametros do Sistema - Consultar",
            "parameters": [
               {
                  "name": "generalParameterIdList",
                  "in": "path",
                  "required": true,
                  "type": "array",
                  "items": {
                     "type": "string"
                  },
                  "description": "A single or mutiple general parameter identifications."
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "General parameter response.",
                  "schema": {
                     "$ref": "#/definitions/GeneralParameterList"
                  }
               },
               "400": {
                  "description": "Invalid parameter. Please check error message for more information",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "401": {
                  "description": "User not authenticated.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "If the general parameter was not found. Happens only when a single identification was informed.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               }
            }
         }
      },
      "v1/generalparameters/groups": {
         "get": {
            "tags": [
               "General Parameter API"
            ],
            "summary": "Find all general parameter groups",
            "description": "Retrieve all available general parameter groups. <h4>Required Functionalities</h4> Gestão de Vendas - Gestão de Parametros do Sistema - Consultar",
            "parameters": [
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "General parameter group response.",
                  "schema": {
                     "$ref": "#/definitions/GeneralParameterGroup"
                  }
               },
               "400": {
                  "description": "Invalid parameter. Please check error message for more information",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "401": {
                  "description": "User not authenticated.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               }
            }
         }
      },
      "/v1/generalparameters/groups/{generalParameterGroupIdList}": {
         "get": {
            "tags": [
               "General Parameter API"
            ],
            "summary": "Find the general parameter groups",
            "description": "Find one or more general parameter groups by its identifications. <h4>Required Functionalities</h4> Gestão de Vendas - Gestão de Parametros do Sistema - Consultar",
            "parameters": [
               {
                  "name": "generalParameterGroupIdList",
                  "in": "path",
                  "required": true,
                  "type": "array",
                  "items": {
                     "type": "integer"
                  },
                  "description": "The unique general parameter group identifier."
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "General parameter group response.",
                  "schema": {
                     "type": "array",
                     "items": {
                        "$ref": "#/definitions/GeneralParameterGroup"
                     }
                  }
               },
               "400": {
                  "description": "Invalid parameter. Please check error message for more information",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "401": {
                  "description": "User not authenticated.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
                "404": {
                  "description": "If the general parameter group was not found. Happens only when a single identification was informed.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               }
            }
         }
      },
      "v1/generalparameters/types": {
         "get": {
            "tags": [
               "General Parameter API"
            ],
            "summary": "Find all general parameter types",
            "description": "Retrieve all currently registered general parameter types. <h4>Required Functionalities</h4> Gestão de Vendas - Gestão de Parametros do Sistema - Consultar",
            "parameters": [
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "General parameter group.",
                  "schema": {
                     "type": "array",
                     "items": {
                        "$ref": "#/definitions/GeneralParameterValueType"
                     }
                  }
               },
               "400": {
                  "description": "Invalid parameter. Please check error message for more information",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "401": {
                  "description": "User not authenticated.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               }
            }
         }
      },
      "v1/generalparameters/types/{valueTypeList}": {
         "get": {
            "tags": [
               "General Parameter API"
            ],
            "summary": "Find general parameter types by identification",
            "description": "Retrieve one or more general parameter type by its identifications. <h4>Required Functionalities</h4> Gestão de Vendas - Gestão de Parametros do Sistema - Consultar",
            "parameters": [
               {

                  "name": "valueTypeList",
                  "in": "path",
                  "required": true,
                  "type": "array",
                  "items": {
                     "type": "string"
                  },
                  "description": "The general parameter value type identification."
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "General parameter value type.",
                  "schema": {
                     "type": "array",
                     "items": {
                        "$ref": "#/definitions/GeneralParameterValueType"
                     }
                  }
               },
               "400": {
                  "description": "Invalid parameter. Please check error message for more information",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "401": {
                  "description": "User not authenticated.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "If the general parameter value type was not found. Happens only when a single identification was informed.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               }
            }
         }
      },
      "v1/generalparameters/{generalParameterId}": {
         "put": {
            "tags": [
               "General Parameter API"
            ],
            "summary": "Updates a general parameter",
            "description": "Updates the specified general parameter. <h4>Required Functionalities</h4> Gestão de Vendas - Gestão de Parametros do Sistema - Gravar",
            "parameters": [
               {
                  "name": "generalParameterId",
                  "description": "The general parameter property identification.",
                  "in": "path",
                  "required": false,
                  "type": "string"
               },
               {
                  "name": "body",
                  "in": "body",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/GeneralParameterResponse"
                  }
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Updated version of this image type.",
                  "schema": {
                     "$ref": "#/definitions/GeneralParameterResponse"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized. Please ensure that you have access to manage image types",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "If the general parameter was not found."
               }
            }
         }
      },
      "/v1/image/types": {
         "get": {
            "tags": [
               "Image Types API"
            ],
            "summary": "Retrieves the image types",
            "description": "Retrieves all the images types registered.",
            "parameters": [
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "List of images types.",
                  "schema": {
                     "type": "array",
                     "items": {
                        "$ref": "#/definitions/ImageType"
                     }
                  }
               },
               "401": {
                  "description": "User not authenticated.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Did not find any images types."
               }
            }
         },
         "post": {
            "tags": [
               "Image Types API"
            ],
            "summary": "Creates a new image type",
            "description": "Creates a new image type. This API operation will create a image type using the posted data.",
            "parameters": [
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "body",
                  "in": "body",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/ImageType"
                  }
               }
            ],
            "responses": {
               "201": {
                  "description": "Created a image type.",
                  "schema": {
                     "$ref": "#/definitions/ImageType"
                  }
               },
               "400": {
                  "description": "Invalid image type information. Please check error message for more information"
               },
               "401": {
                  "description": "User not authenticated.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized. Please ensure that you have access to manage image types",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               }
            }
         }
      },
      "/v1/image/types/{imageTypeId}": {
         "get": {
            "tags": [
               "Image Types API"
            ],
            "summary": "Retrieves the image type based on image type id",
            "description": "Gets the image type by image type id.",
            "parameters": [
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "imageTypeId",
                  "required": true,
                  "in": "path",
                  "type": "string",
                  "description": "The image type id, which is a unique identifier for the image type.",
                  "default": "SRC"
               }
            ],
            "responses": {
               "200": {
                  "description": "Image type information success requested.",
                  "schema": {
                     "$ref": "#/definitions/ImageType"
                  }
               },
               "401": {
                  "description": "User not authenticated.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Did not find any images types."
               }
            }
         },
         "put": {
            "tags": [
               "Image Types API"
            ],
            "summary": "Update a image type",
            "description": "Update provided image type information. This API operation is supposed to be used to change basic image information data.",
            "parameters": [
               {
                  "name": "body",
                  "in": "body",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/ImageType"
                  }
               },
               {
                  "name": "imageTypeId",
                  "in": "path",
                  "required": true,
                  "type": "string",
                  "description": "The image type id, which is a unique identifier for the image type."
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Updated version of this image type.",
                  "schema": {
                     "$ref": "#/definitions/ImageType"
                  }
               },
               "400": {
                  "description": "Invalid image type data or trying to change data that is read only. Please check error messages for more details.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized. Please ensure that you have access to manage image types",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "No image type found for this source name id."
               }
            }
         },
         "delete": {
            "tags": [
               "Image Types API"
            ],
            "summary": "Delete an image type",
            "description": "Delete an image type, using the image type id to find this image type and delete it.",
            "parameters": [
               {
                  "name": "imageTypeId",
                  "in": "path",
                  "required": true,
                  "type": "string",
                  "description": "The image type id, which is a unique identifier for the image type."
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "204": {
                  "description": "Image type successfuly deleted"
               },
               "401": {
                  "description": "User not authenticated.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Did not find any images types."
               }
            }
         }
      },
      "/v1/ratings": {
         "get": {
            "tags": [
               "Rating API"
            ],
            "summary": "Fetches all ratings",
            "description": "This API fetches all ratings paginated.<h4>Required Functionalities<\/h4> Conteudo - Usuario - Resenhas - Consultar",
            "parameters": [
               {
                  "name": "date",
                  "in": "query",
                  "required": false,
                  "type": "string",
                  "format": "date-time",
                  "description": "The rating date (in jersey date format) like <b>\"2016-06-27T17:56:53.862Z\"<\/b> or <b>\"2016-06-27\"<\/b> for instance"
               },
               {
                  "name": "status",
                  "required": false,
                  "description": "The rating's status. As the name suggest, it's about the current rating's status that's an identifier which can be: <b>\"APR\"<\/b> for approved status, <b>\"PEN\"<\/b> for pendent, <b>\"REP\"<\/b> for reproved or <b>\"ARE\"<\/b> for automatically reproved.",
                  "type": "string",
                  "in": "query"
               },
               {
                  "name": "type",
                  "required": false,
                  "description": "The rating's type. As the name suggest, it's about the type of rating that's an identifier which can be dynamic (i.e., can take many different names according with what is registered in database). The most common are: <b>\"PRD\"<\/b> for product's ratings, <b>\"SHP\"<\/b> for shop's rating, <b>\"RTR\"<\/b> for rating of rating.",
                  "type": "string",
                  "in": "query"
               },
               {
                  "name": "page",
                  "required": false,
                  "default": 0,
                  "description": "Page number. Starts with 0. This number has no decimal places.",
                  "type": "number",
                  "in": "query"
               },
               {
                  "name": "size",
                  "required": false,
                  "default": 20,
                  "description": "The maximum number of records to retrieve. If not provided, a default value is used. This number has no decimal places.",
                  "type": "number",
                  "in": "query"
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Paginated rating list",
                  "schema": {
                     "$ref": "#/definitions/RatingListPagination"
                  }
               },
               "400": {
                  "description": "Invalid parameter. Please check error message for more info.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized. Please ensure that you have access to manage rating informations.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Rating not found. Please check error message for more info.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               }
            }
         }
      },
      "/v1/ratings/{ratingId}": {
         "get": {
            "tags": [
               "Rating API"
            ],
            "summary": "Fetches the rating by ratingId",
            "description": "This API fetch a rating by its id. <h4>Required Functionalities<\/h4> Conteudo - Usuario - Resenhas - Consultar",
            "parameters": [
               {
                  "name": "ratingId",
                  "in": "path",
                  "required": true,
                  "type": "number",
                  "description": "The rating id to be fetched. This number has no decimal places."
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "The rating fetched.",
                  "schema": {
                     "$ref": "#/definitions/Rating"
                  }
               },
               "400": {
                  "description": "Invalid parameter. Please check error message for more info.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized. Please ensure that you have access to manage rating information for this ratingId.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Rating not found. Please check error message for more info.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               }
            }
         }
      },
      "/v1/ratings/{ratingId}/status/{status}": {
         "put": {
            "tags": [
               "Rating API"
            ],
            "summary": "Updates the rating status",
            "description": "This API updates the status of rating by its id. <h4>Required Functionalities<\/h4> Conteudo - Usuario - Resenhas - Gravar",
            "parameters": [
               {
                  "name": "ratingId",
                  "in": "path",
                  "required": true,
                  "type": "number",
                  "description": "The rating id to be updated. This number has no decimal places."
               },
               {
                  "name": "status",
                  "in": "path",
                  "required": true,
                  "type": "string",
                  "description": "The rating's status to be updated. As the name suggest, it's the rating's status that's an identifier which can be: <b>\"APR\"<\/b> for approved status, <b>\"PEN\"<\/b> for pendent, <b>\"REP\"<\/b> for reproved or <b>\"ARE\"<\/b> for automatically reproved."
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "The rating was successfully updated. The updated version of the rating will be returned.",
                  "schema": {
                     "$ref": "#/definitions/Rating"
                  }
               },
               "400": {
                  "description": "Invalid parameter. Please check error message for more info.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized. Please ensure that you have access to manage rating information for this ratingId.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Rating not found. Please check error message for more info.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               }
            }
         }
      },
      "/v1/salechannels": {
         "get": {
            "tags": [
               "Sale Channels API"
            ],
            "summary": "Fetches all sale channels",
            "description": "This API fetches all sales channels paginated.",
            "parameters": [
               {
                  "name": "page",
                  "required": false,
                  "default": 0,
                  "description": "Page number. Starts with 0. This number has no decimal places.",
                  "type": "number",
                  "in": "query"
               },
               {
                  "name": "size",
                  "required": false,
                  "default": 20,
                  "description": "The maximum number of records to retrieve. If not provided, a default value is used. This number has no decimal places.",
                  "type": "number",
                  "in": "query"
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Paginated sale channel list",
                  "schema": {
                     "$ref": "#/definitions/SaleChannelListPagination"
                  }
               },
               "400": {
                  "description": "Invalid parameter. Please check error message for more info.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized. Please ensure that you have access to manage rating informations.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               }
            }
         },
         "post": {
            "tags": [
               "Sale Channels API"
            ],
            "summary": "Create a new sale channel",
            "description": "This API creates a new SaleChannel. This API will create a new SaleChannel using the posted data. All fields are required.",
            "parameters": [
               {
                  "name": "body",
                  "in": "body",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/SaleChannel"
                  }
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Return the newly created SaleChannel.",
                  "schema": {
                     "$ref": "#/definitions/SaleChannel"
                  }
               },
               "400": {
                  "description": "Invalid parameter. Please check error message for more info.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized. Please ensure that you have access to manage rating informations.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               }
            }
         }
      },
      "/v1/salechannels/{saleChannelId}": {
         "get": {
            "tags": [
               "Sale Channels API"
            ],
            "summary": "Fetch the sale channel by id",
            "description": "This API fetch a SaleChannel by its id.",
            "parameters": [
               {
                  "name": "saleChannelId",
                  "required": true,
                  "description": "The SaleChannel's id. For example, if the sale channel is Internet, the id is <b>\"INT\"<\/b>; if is Teleshopping, the id is <b>\"TEL\"<\/b> etc.",
                  "type": "string",
                  "in": "path"
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "The SaleChannel fetched.",
                  "schema": {
                     "$ref": "#/definitions/SaleChannel"
                  }
               },
               "400": {
                  "description": "Invalid parameter. Please check error message for more info.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized. Please ensure that you have access to manage rating informations.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "SaleChannel not found. Please check error message for more info.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               }
            }
         },
         "put": {
            "tags": [
               "Sale Channels API"
            ],
            "summary": "Update a specific sale channel by id",
            "description": "This API updates a specific SaleChannel by id. It is possible to update the name and the description of the SaleChannel.",
            "parameters": [
               {
                  "name": "saleChannelId",
                  "required": true,
                  "default": "INT",
                  "description": "The SaleChannel's id. For example, if the sale channel is Internet, the id is <b>\"INT\"<\/b>; if is Teleshopping, the id is <b>\"TEL\"<\/b> etc.",
                  "type": "string",
                  "in": "path"
               },
               {
                  "name": "body",
                  "in": "body",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/SaleChannel"
                  }
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "The SaleChannel updated.",
                  "schema": {
                     "$ref": "#/definitions/SaleChannel"
                  }
               },
               "400": {
                  "description": "Invalid parameter. Please check error message for more info.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized. Please ensure that you have access to manage rating informations.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "SaleChannel not found. Please check error message for more info.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               }
            }
         }
      },
      "/v1/sheet/master/instocknotproduced": {
         "get": {
            "tags": [
               "Sheet API"
            ],
            "summary": "Generates a Master Product SKU list export asynchronously",
            "description": "Return a Master Product SKU list link to download. This export uses the same structure as a standard Master export, however it will contain only SKUs in stock that are not produced<h4>Required Functionalities<\/h4>Product Master spreadsheet filler",
            "parameters": [
               {
                  "name": "saleChannel",
                  "description": "This parameter is the saleChannel. For example: INT.",
                  "type": "string",
                  "required": false,
                  "in": "query"
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "The sheet response link",
                  "schema": {
                     "$ref": "#/definitions/AsyncMetadataResponse"
                  }
               },
               "400": {
                  "description": "Invalid parameter. Please check error message for more info.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized. Please ensure that you have access to manage rating informations.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               }
            }
         }
      },
      "/v1/stats": {
         "get": {
            "tags": [
               "Stats API"
            ],
            "summary": "Retrieves the calculation of the statistics",
            "description": "Gets the statistics values used to make statistical calculation. The values can be the sum of produced products and  the sum of not produced products.",
            "parameters": [
               {
                  "name": "saleChannel",
                  "description": "This parameter is the saleChannel. For example: INT.",
                  "type": "string",
                  "in": "query"
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "The statistic of the calculated products.",
                  "schema": {
                     "$ref": "#/definitions/StatsCalculation"
                  }
               },
               "400": {
                  "description": "Invalid parameter. Please check error message for more info.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               }
            }
         }
      },
      "/v1/stats/skuProductionStatus": {
         "get": {
            "tags": [
               "Stats API"
            ],
            "summary": "Retrieves the calculation of the statistics of all not produced skus",
            "description": "Gets the statistics values used in the dashboard, This service will return a list pageable of skus not produced.<h4>Required Functionalities<\/h4>Vendas - Dashboard",
            "parameters": [
               {
                  "name": "page",
                  "in": "query",
                  "required": false,
                  "type": "number",
                  "default": 0,
                  "description": "Page number. Starts with 0. This number has no decimal places."
               },
               {
                  "name": "size",
                  "in": "query",
                  "required": false,
                  "type": "number",
                  "default": 20,
                  "description": "Page size. Cannot be higher than 20. This number has no decimal places."
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "The list of calculated skus.",
                  "schema": {
                     "$ref": "#/definitions/SkusNotProduced"
                  }
               },
               "400": {
                  "description": "Invalid parameter. Please check error message for more info.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               }
            }
         }
      },
      "/v1/stats/bestselling": {
         "get": {
            "tags": [
               "Stats API"
            ],
            "summary": "Retrieves best selling SKUs from a provided time frame",
            "description": "This API retrieves best selling SKUs from a provided time frame.<h4>Required Functionalities<\/h4>Vendas - Dashboard",
            "parameters": [
               {
                  "name": "page",
                  "in": "query",
                  "required": false,
                  "type": "number",
                  "default": 0,
                  "description": "Page number. Starts with 0. This number has no decimal places."
               },
               {
                  "name": "size",
                  "in": "query",
                  "required": false,
                  "type": "number",
                  "default": 20,
                  "description": "Page size. Cannot be higher than 20. This number has no decimal places."
               },
               {
                  "name": "startDate",
                  "in": "query",
                  "required": true,
                  "type": "string",
                  "format": "date-time",
                  "description": "The start date to search. For example: 2016-08-30T14:19:10.265Z."
               },
               {
                  "name": "endDate",
                  "in": "query",
                  "required": true,
                  "type": "string",
                  "format": "date-time",
                  "description": "The end date to search. For example: 2016-08-30T14:19:10.265Z."
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "The list of calculated skus.",
                  "schema": {
                     "$ref": "#/definitions/StatsBestSelling"
                  }
               },
               "400": {
                  "description": "Invalid parameter. Please check error message for more info.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               }
            }
         }
      },
      "/v1/udas/{id}": {
         "get": {
            "tags": [
               "User Defined Attributes (UDA) API"
            ],
            "summary": "Retrieve an UDA based on the unique identifier",
            "description": "This operation allow you to retrieve detailed information about an UDA. <h4>Required Functionalities<\/h4> Produtos - Atributos - Consultar",
            "parameters": [
               {
                  "name": "id",
                  "description": "This parameter is the UDA unique identifier. This number has no decimal places.",
                  "required": true,
                  "type": "number",
                  "in": "path"
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "The UDA information.",
                  "schema": {
                     "$ref": "./api/def/uda.json#/UDA"
                  }
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "UDA not found"
               }
            }
         },
         "put": {
            "tags": [
               "User Defined Attributes (UDA) API"
            ],
            "summary": "Update an UDA",
            "description": "This operation allow you to update an UDA based on the unique identifier. The array of values in the entity UDA is used only for the types multivalued, such as MVU, MVM, MVH, MHM and RMM. and the attribute \"html\" is use only by the types MVH and MHM. <h4>Required Functionalities<\/h4> Produtos - Atributos - Gravar",
            "parameters": [
               {
                  "name": "id",
                  "description": "This parameter is the UDA unique identifier. This number has no decimal places.",
                  "required": true,
                  "type": "number",
                  "in": "path"
               },
               {
                  "name": "body",
                  "in": "body",
                  "required": true,
                  "schema": {
                     "$ref": "./api/def/uda.json#/UDA"
                  }
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "The UDA update.",
                  "schema": {
                     "$ref": "./api/def/uda.json#/UDA"
                  }
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "UDA not found"
               }
            }
         },
         "delete": {
            "tags": [
               "User Defined Attributes (UDA) API"
            ],
            "summary": "Delete an UDA based on the unique identifier",
            "description": "This operation allow you to delete an UDA based on the unique identifier. <h4>Required Functionalities<\/h4> Produtos - Atributos - Gravar",
            "parameters": [
               {
                  "name": "id",
                  "description": "This parameter is the UDA unique identifier. This number has no decimal places.",
                  "required": true,
                  "type": "number",
                  "in": "path"
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "204": {
                  "description": "UDA successfuly deleted"
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "UDA not found"
               }
            }
         }
      },
      "/v1/udas": {
         "get": {
            "tags": [
               "User Defined Attributes (UDA) API"
            ],
            "summary": "Retrieve a paginated list of UDAs based on the parameters",
            "description": "This operation allow you to retrieve a paginated list with detailed information about each UDA of your store ordered by UDA name. You can use the parameters \"type\" and \"variant\" to filter specific UDAs. <h4>Required Functionalities<\/h4> Produtos - Atributos - Consultar",
            "parameters": [
               {
                  "name": "page",
                  "in": "query",
                  "required": false,
                  "type": "number",
                  "default": 0,
                  "description": "Page number. Starts with 0. This number has no decimal places."
               },
               {
                  "name": "size",
                  "in": "query",
                  "required": false,
                  "type": "number",
                  "default": 20,
                  "description": "The maximum number of records to retrieve. If not provided, a default value is used. This number has no decimal places."
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "variant",
                  "in": "query",
                  "required": false,
                  "type": "boolean",
                  "description": "This parameter allow to filter the UDAs that belongs to some SKU."
               },
               {
                  "name": "type",
                  "type": "string",
                  "in": "query",
                  "required": false,
                  "description": "This parameter allow to filter the UDAs by the type, the types allowed are: <\/br><ul><li>TXN - Accepts as value a text, number, date and etc;<\/li><li>TXL - Accepts as value a long text;<\/li><li>MVU - Accepts as value a multivalued with only one selection;<\/li><li>MVM - Accepts as value a multivalued with one or more selections;<\/li><li>MAN - Accepts as value a boolean true - \"Yes\" -  or - false -\"No\", this type is used when the product/SKU has or not a manual;<\/li><li>E3D - Accepts as value an URL, this URL is for a 3D experience  of a product;<\/li><li>MVH - Accepts as value a multivalued with only one selection, this type allow to use a HTML to personalize the exibition of the UDA;<\/li><li>MHM - Accepts as value a multivalued with one or more selections,  this type allow to use a HTML to personalize the exibition of the UDA;<\/li><li>RMM - Accepts as value a multivalued and restrictive with one or more selections .<\/li> <\/ul>",
                  "enum": [
                     "TXN",
                     "TXL",
                     "MVU",
                     "MVM",
                     "MAN",
                     "E3D",
                     "MVH",
                     "MHM",
                     "RMM"
                  ]
               }
            ],
            "responses": {
               "200": {
                  "description": "Paginated UDAs information.",
                  "schema": {
                     "$ref": "#/definitions/UDAPagination"
                  }
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               }
            }
         },
         "post": {
            "tags": [
               "User Defined Attributes (UDA) API"
            ],
            "summary": "Create an UDA",
            "description": "This operation allow you to create an UDA. The array of values in the entity UDA is used only for the types multivalued, such as MVU, MVM, MVH, MHM and RMM. and the attribute \"html\" is use only by the types MVH and MHM. <h4>Required Functionalities<\/h4> Produtos - Atributos - Gravar",
            "parameters": [
               {
                  "name": "body",
                  "in": "body",
                  "required": true,
                  "schema": {
                     "$ref": "./api/def/uda.json#/UDA"
                  }
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "201": {
                  "description": "The UDA created.",
                  "schema": {
                     "$ref": "./api/def/uda.json#/UDA"
                  }
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               }
            }
         }
      },
      "/v1/udas/{id}/values/{valueId}": {
         "delete": {
            "tags": [
               "User Defined Attributes (UDA) API"
            ],
            "summary": "Delete an UDA value from an UDA based on the unique identifier of an UDA value",
            "description": "This operation allow you to delete an UDA value of an UDA multivalued based on the {id} and {valueId}. The UDA type allowed in this operation are the MVU, MVM, MVH, MHM and RMM. <h4>Required Functionalities<\/h4> Produtos - Atributos - Gravar",
            "parameters": [
               {
                  "name": "id",
                  "description": "This parameter is the UDA unique identifier. This number has no decimal places.",
                  "required": true,
                  "type": "number",
                  "in": "path"
               },
               {
                  "name": "valueId",
                  "description": "This parameter is the UDA value unique identifier. This number has no decimal places.",
                  "required": true,
                  "type": "number",
                  "in": "path"
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "204": {
                  "description": "UDA successfuly deleted"
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "UDA not found or UDA value not found."
               }
            }
         },
         "put": {
            "tags": [
               "User Defined Attributes (UDA) API"
            ],
            "summary": "Update an UDA value from an UDA based on the unique identifier of an UDA value",
            "description": "This operation allow you to update an UDA value of an UDA multivalued based on the {id} and {valueId}. The UDA type allowed in this operation are the MVU, MVM, MVH, MHM and RMM and the attribute \"html\" is use only by the types MVH and MHM. <h4>Required Functionalities<\/h4> Produtos - Atributos - Gravar",
            "parameters": [
               {
                  "name": "id",
                  "description": "This parameter is the UDA unique identifier. This number has no decimal places.",
                  "required": true,
                  "type": "number",
                  "in": "path"
               },
               {
                  "name": "valueId",
                  "description": "This parameter is the UDA value unique identifier. This number has no decimal places.",
                  "required": true,
                  "type": "number",
                  "in": "path"
               },
               {
                  "name": "body",
                  "in": "body",
                  "required": true,
                  "schema": {
                     "$ref": "./api/def/uda.json#/UDAValue"
                  }
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "UDA successfuly updated.",
                  "schema": {
                     "$ref": "./api/def/uda.json#/UDAValue"
                  }
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "UDA not found or UDA value not found."
               }
            }
         }
      },
      "/v1/udas/{id}/values": {
         "post": {
            "tags": [
               "User Defined Attributes (UDA) API"
            ],
            "summary": "Create a new UDA value for an UDA based on the unique identifier",
            "description": "This operation allow you to create a new UDA value for an UDA multivalued based on the {id}. The UDA type allowed in this operation are the MVU, MVM, MVH, MHM and RMM and the attribute \"html\" is use only by the types MVH and MHM. <h4>Required Functionalities<\/h4> Produtos - Atributos - Gravar",
            "parameters": [
               {
                  "name": "id",
                  "description": "This parameter is the UDA unique identifier. This number has no decimal places.",
                  "required": true,
                  "type": "number",
                  "in": "path"
               },
               {
                  "name": "body",
                  "in": "body",
                  "required": true,
                  "schema": {
                     "type": "array",
                     "items": {
                        "$ref": "./api/def/uda.json#/UDAValue"
                     }
                  }
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "UDAs successfuly created.",
                  "schema": {
                     "$ref": "#/definitions/UDAValueArray"
                  }
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "UDA not found or UDA value not found."
               }
            }
         }
      },
      "/v1/tags/{tagName}": {
         "get": {
            "tags": [
               "Tag API"
            ],
            "summary": "Retrieve Tag by name",
            "description": "Gets a specific tag by name.",
            "parameters": [
               {
                  "name": "tagName",
                  "in": "path",
                  "required": true,
                  "type": "string",
                  "description": "The tag name is a unique identifier for the tag."
               }
            ],
            "responses": {
               "200": {
                  "description": "The tag information success requested",
                  "schema": {
                     "$ref": "#/definitions/Tag"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Tag not found"
               }
            }
         },
         "put": {
            "tags": [
               "Tag API"
            ],
            "summary": "Update a specific Tag by name",
            "description": "Update a specific tag by name.",
            "parameters": [
               {
                  "name": "body",
                  "in": "body",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/Tag"
                  }
               },
               {
                  "name": "tagName",
                  "in": "path",
                  "required": true,
                  "type": "string",
                  "description": "The tag name is a unique identifier for the tag."
               }
            ],
            "responses": {
               "200": {
                  "description": "The tag successfuly updated.",
                  "schema": {
                     "$ref": "#/definitions/Tag"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Tag not found"
               }
            }
         },
         "delete": {
            "tags": [
               "Tag API"
            ],
            "summary": "Delete a specific tag",
            "description": "Delete a specific tag by name.",
            "parameters": [
               {
                  "name": "tagName",
                  "in": "path",
                  "required": true,
                  "type": "string",
                  "description": "The tag name is a unique identifier for the tag."
               }
            ],
            "responses": {
               "204": {
                  "description": "Tag successfuly deleted"
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Tag not found"
               }
            }
         }
      },
      "/v1/statics": {
         "post": {
            "tags": [
               "Static Support API"
            ],
            "summary": "Add Static",
            "description": "Add a Static File. <h4> Required Functionality <\/h4> Conteudo - Conteudo Estatico- Conteudo Estatico de Apoio (Layout) - Gravar",
            "parameters": [
               {
                  "name": "file",
                  "in": "part",
                  "required": true,
                  "type": "file",
                  "description": "The file to save static support"
               },
               {
                  "name": "static",
                  "in": "part",
                  "required": true,
                  "description": "The informations of static support to save",
                  "schema": {
                     "$ref": "#/definitions/StaticSupport"
                  }
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "201": {
                  "description": "The static support information success requested",
                  "schema": {
                     "$ref": "#/definitions/StaticSupportResponse"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Static type not found"
               },
               "400": {
                  "description": "Invalid data provided. Please check error messages for more details.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               }
            }
         },
         "get": {
            "tags": [
               "Static Support API"
            ],
            "summary": "Get Statics by filters",
            "description": "Return a list of Static Support found. <h4> Required Functionality <\/h4> Conteudo - Conteudo Estatico- Conteudo Estatico de Apoio (Layout) - Consultar",
            "parameters": [
               {
                  "name": "page",
                  "in": "query",
                  "required": false,
                  "default": 0,
                  "type": "integer",
                  "description": "The current page to show results"
               },
               {
                  "name": "size",
                  "in": "query",
                  "required": false,
                  "default": 20,
                  "type": "integer",
                  "description": "The number of informations to show per page"
               },
               {
                  "name": "staticId",
                  "in": "query",
                  "required": false,
                  "type": "integer",
                  "description": "the static support identification"
               },
               {
                  "name": "name",
                  "in": "query",
                  "required": false,
                  "type": "string",
                  "description": "The static support name"
               },
               {
                  "name": "description",
                  "in": "query",
                  "required": false,
                  "type": "string",
                  "description": "The static support description"
               },
               {
                  "name": "type",
                  "in": "query",
                  "required": false,
                  "type": "string",
                  "description": "The static support type. e.g: pdf, img, txt and etc."
               },
               {
                  "name": "url",
                  "in": "query",
                  "required": false,
                  "type": "string",
                  "description": "the static support url"
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "The list of static support found.",
                  "schema": {
                     "$ref": "#/definitions/StaticSupportResponsePagination"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "400": {
                  "description": "Invalid data provided. Please check error messages for more details.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               }
            }
         }
      },
      "/v1/statics/{staticId}": {
         "get": {
            "tags": [
               "Static Support API"
            ],
            "summary": "Get Static by Id",
            "description": "Return a Static. <h4> Required Functionality <\/h4> Conteudo - Conteudo Estatico- Conteudo Estatico de Apoio (Layout) - Consultar",
            "parameters": [
               {
                  "name": "staticId",
                  "in": "path",
                  "required": true,
                  "type": "integer",
                  "description": "the static support identification"
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "The static support found.",
                  "schema": {
                     "$ref": "#/definitions/StaticSupportResponse"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Static not found."
               }
            }
         },
         "put": {
            "tags": [
               "Static Support API"
            ],
            "summary": "Update static",
            "description": "Update static by its identification. <h4> Required Functionality <\/h4> Conteudo - Conteudo Estatico- Conteudo Estatico de Apoio (Layout) - Gravar",
            "parameters": [
               {
                  "name": "staticId",
                  "in": "path",
                  "required": true,
                  "type": "integer",
                  "description": "the static support identification"
               },
               {
                  "name": "static",
                  "in": "body",
                  "required": true,
                  "description": "The informations of static support to save",
                  "schema": {
                     "$ref": "#/definitions/StaticSupport"
                  }
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "The static support updated.",
                  "schema": {
                     "$ref": "#/definitions/StaticSupportResponse"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "400": {
                  "description": "Invalid data provided. Please check error messages for more details.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "404": {
                  "description": "Static and/or static type not found."
               }
            }
         },
         "delete": {
            "tags": [
               "Static Support API"
            ],
            "summary": "Delete static",
            "description": "Delete static by its identification. <h4> Required Functionality <\/h4> Conteudo - Conteudo Estatico- Conteudo Estatico de Apoio (Layout) - Gravar",
            "parameters": [
               {
                  "name": "staticId",
                  "in": "path",
                  "required": true,
                  "type": "array",
                  "items": {
                     "type": "integer"
                  },
                  "description": "The static support identification. Can be a list of ids too."
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "204": {
                  "description": "Static Support successfuly deleted"
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "When the list has only one identification, the API will return 404 when the id is not found."
               }
            }
         }
      },
      "/ifc-content-api/v1/levelsheets": {
         "post": {
            "tags": [
               "Level Management API - Sheet"
            ],
            "summary": "Import a sheet containing all website's levels",
            "description": "This API operation will allow you to trigger one async process to import a sheet with all informations about the website's levels. This importation will create the records that doesn't exist and/or update the ones that already exist.<br><br>If the parameter <b>cleanup<\/b> was provided with <b>true<\/b> value and the request was done by a a user with <b>ContentManagementLevelSheetCleanupWrite<\/b> ROLE, the importation process will <b>delete all records related with website's levels that are not present in the sheet<\/b> after the successfully importation of the sheet. As this operation is very sensitive, just the requests made with that special role will be allowed to execute it",
            "parameters": [
               {
                  "name": "sheet",
                  "in": "query",
                  "required": true,
                  "type": "file",
                  "description": "The spreadsheet XLS file containing all website's levels to be imported"
               },
               {
                  "name": "cleanup",
                  "required": false,
                  "description": "If true means that all records related with website's levels must be deleted before the importation.",
                  "type": "boolean",
                  "default": false,
                  "in": "query"
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "202": {
                  "description": "Async process information. Please use async API in order to follow its execution.",
                  "schema": {
                     "$ref": "./api/def/async.json#/AsyncMetadata"
                  }
               },
               "400": {
                  "description": "Invalid spreadsheet XLS file containing website's levels. Please check response messages.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "Your profile doesn't grant you access to this operation. Please login with an appropriate user.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               }
            }
         },
         "get": {
            "tags": [
               "Level Management API - Sheet"
            ],
            "summary": "Exports a sheet containing all current website's levels",
            "description": "This API operation will allow you to trigger one async process to export a sheet with all informations about the current website's levels. This sheet can be used to massively edit the levels data so that it can be imported using the POST methods.",
            "parameters": [
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "202": {
                  "description": "Async process information. Please use async API in order to follow its execution. After the process finish the link to download the spreadsheet will be available in <i>links<\/i> attribute, with the <i>rel=sheet<\/i>.",
                  "schema": {
                     "$ref": "./api/def/async.json#/AsyncMetadata"
                  }
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "Your profile doesn't grant you access to this operation. Please login with an appropriate user.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               }
            }
         }
      },
      "/ifc-content-api/v1/levels": {
         "get": {
            "tags": [
               "Level Management API"
            ],
            "summary": "Fetch all levels",
            "description": "Use this API in order to fetch all website's levels paginated. <h4>Required Functionalities<\/h4>Produtos - Categorias - Consultar",
            "parameters": [
               {
                  "name": "page",
                  "required": false,
                  "default": 0,
                  "description": "Page number. Starts with 0. This number has no decimal places.",
                  "type": "number",
                  "in": "query"
               },
               {
                  "name": "size",
                  "required": false,
                  "default": 20,
                  "description": "The maximum number of records to retrieve. If not provided, a default value is used. This number has no decimal places.",
                  "type": "number",
                  "in": "query"
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Paginated Levels information.",
                  "schema": {
                     "$ref": "#/definitions/LevelPagination"
                  }
               },
               "400": {
                  "description": "Invalid parameter. Please check error message for more info.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "Your profile doesn't grant you access to this operation. Please login with an appropriate user.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               }
            }
         },
         "post": {
            "tags": [
               "Level Management API"
            ],
            "summary": "Create a new level",
            "description": "Use this API in order the create a new website's level.<h4>Required Functionalities<\/h4> Produtos - Categorias - Gravar",
            "parameters": [
               {
                  "name": "body",
                  "in": "body",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/Level"
                  }
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "201": {
                  "description": "The level created",
                  "schema": {
                     "$ref": "#/definitions/Level"
                  }
               },
               "400": {
                  "description": "Invalid parameter. Please check error message for more info.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "Your profile doesn't grant you access to this operation. Please login with an appropriate user.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               }
            }
         }
      },
      "/ifc-content-api/v1/levels/{levelId}": {
         "get": {
            "tags": [
               "Level Management API"
            ],
            "summary": "Fetch a level",
            "description": "Use this API in order to fetch a website's level by its identifier (i.e. the levelId). <h4>Required Functionalities<\/h4> Produtos - Categorias - Consultar",
            "parameters": [
               {
                  "name": "levelId",
                  "in": "path",
                  "required": true,
                  "type": "number",
                  "description": "The level id to be fetched. This number has no decimal places."
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "The level fetched",
                  "schema": {
                     "$ref": "#/definitions/Level"
                  }
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "Your profile doesn't grant you access to this operation. Please login with an appropriate user.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Level not found. Please check error message for more info.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               }
            }
         },
         "put": {
            "tags": [
               "Level Management API"
            ],
            "summary": "Update a level",
            "description": "Use this API in order to UPDATE a website's level by its identifier (i.e. the levelId). <h4>Required Functionalities<\/h4> Produtos - Categorias - Gravar",
            "parameters": [
               {
                  "name": "body",
                  "in": "body",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/Level"
                  }
               },
               {
                  "name": "levelId",
                  "in": "path",
                  "required": true,
                  "type": "number",
                  "description": "The level id to be updated. This number has no decimal places."
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "The level updated",
                  "schema": {
                     "$ref": "#/definitions/Level"
                  }
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "Your profile doesn't grant you access to this operation. Please login with an appropriate user.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Level not found. Please check error message for more info.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               }
            }
         },
         "delete": {
            "tags": [
               "Level Management API"
            ],
            "summary": "Delete a level",
            "description": "Use this API in order to DELETE a website's level by its identifier (i.e, the levelId).<h4>Required Functionalities<\/h4> Produtos - Categorias - Gravar",
            "parameters": [
               {
                  "name": "levelId",
                  "in": "path",
                  "required": true,
                  "type": "number",
                  "description": "The level id to be deleted. This number has no decimal places."
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "204": {
                  "description": "Level successfuly deleted"
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "Your profile doesn't grant you access to this operation. Please login with an appropriate user.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Level not found. Please check error message for more info.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               }
            }
         }
      },
      "/ifc-contect-api/v1/levels/leveltree": {
         "get": {
            "tags": [
               "Level Management API"
            ],
            "summary": "Fetch all levels hierarchically",
            "description": "Use this API in order to fetch all website's levels hierarchically. Each level object in the response of this API is a short version of the regular level object, containing only relevant attributes such as \"levelId\", the father \"levelId\", the name and the list of related sublevels.<h4>Required Functionalities<\/h4> Produtos - Categorias - Consultar",
            "parameters": [
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "The list of levels hierarchically, begining in the root.",
                  "examples": {
                     "application/json": [
                        {
                           "levelId": 23375,
                           "name": "Eletrônicos",
                           "levels": [
                              {
                                 "levelId": 23383,
                                 "levelIdFather": 23375,
                                 "name": "Vídeo Games",
                                 "levels": []
                              },
                              {
                                 "levelId": 23384,
                                 "levelIdFather": 23375,
                                 "name": "MP3 Players",
                                 "levels": []
                              }
                           ]
                        },
                        {
                           "levelId": 33176,
                           "name": "Livros",
                           "levels": [
                              {
                                 "levelId": 33188,
                                 "levelIdFather": 33176,
                                 "name": "Literatura",
                                 "levels": []
                              },
                              {
                                 "levelId": 33384,
                                 "levelIdFather": 33176,
                                 "name": "Infantis",
                                 "levels": [
                                    {
                                       "levelId": 53384,
                                       "levelIdFather": 33384,
                                       "name": "0 a 3 anos",
                                       "levels": []
                                    },
                                    {
                                       "levelId": 55384,
                                       "levelIdFather": 33384,
                                       "name": "3 a 10 anos",
                                       "levels": []
                                    }
                                 ]
                              }
                           ]
                        }
                     ]
                  },
                  "schema": {
                     "type": "array",
                     "items": {
                        "$ref": "#/definitions/LevelShort"
                     }
                  }
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "Your profile doesn't grant you access to this operation. Please login with an appropriate user.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               }
            }
         }
      },
      "/ifc-content-api/v1/related/types": {
         "get": {
            "tags": [
               "Related Type Management API"
            ],
            "summary": "Retrieve the list of related types",
            "description": "This API allow you to retrieve all the related types. The response will be a array/list of related type. <h4>Required Functionalities<\/h4> Produtos - Produtos - Consultar",
            "parameters": [
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "The array/list of related type.",
                  "schema": {
                     "type": "array",
                     "items": {
                        "$ref": "./api/def/itg-product.json#/RelatedTypes"
                     }
                  }
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "Your profile doesn't grant you access to this operation. Please login with an appropriate user.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               }
            }
         },
         "post": {
            "tags": [
               "Related Type Management API"
            ],
            "summary": "Create a related type",
            "description": "This API allow you to create a related type. <h4>Required Functionalities<\/h4> Produtos - Produtos - Gravar",
            "parameters": [
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "body",
                  "description": "The related type to create.",
                  "in": "body",
                  "required": true,
                  "type": "object",
                  "schema": {
                     "$ref": "./api/def/itg-product.json#/RelatedTypes"
                  }
               },
               {
                  "name": "relationTp",
                  "in": "path",
                  "required": true,
                  "type": "string",
                  "description": "The related type such as crs (CrossSelling)"
               }
            ],
            "responses": {
               "201": {
                  "description": "The related type created.",
                  "schema": {
                     "$ref": "./api/def/itg-product.json#/RelatedTypes"
                  }
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "Your profile doesn't grant you access to this operation. Please login with an appropriate user.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "409": {
                  "description": "The related type received allready exist.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               }
            }
         }
      },
      "/ifc-content-api/v1/related/types/{relationTp}": {
         "put": {
            "tags": [
               "Related Type Management API"
            ],
            "summary": "Update a related type",
            "description": "This API allow you to update a related type. <h4>Required Functionalities<\/h4> Produtos - Produtos - Gravar",
            "parameters": [
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "relationTp",
                  "in": "path",
                  "required": true,
                  "type": "string",
                  "description": "The related type such as crs (CrossSelling)"
               },
               {
                  "name": "body",
                  "description": "The related type to update",
                  "in": "body",
                  "required": true,
                  "type": "object",
                  "schema": {
                     "$ref": "./api/def/itg-product.json#/RelatedTypes"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "The related type updated.",
                  "schema": {
                     "$ref": "./api/def/itg-product.json#/RelatedTypes"
                  }
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "Your profile doesn't grant you access to this operation. Please login with an appropriate user.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "409": {
                  "description": "The related type received allready exist.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "404": {
                  "description": "The related type not found.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               }
            }
         },
         "delete": {
            "tags": [
               "Related Type Management API"
            ],
            "summary": "Delete a related type",
            "description": "This API allow you to delete a related type, that is not been used to do a relationship. <h4>Required Functionalities<\/h4> Produtos - Produtos - Gravar",
            "parameters": [
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "relationTp",
                  "in": "path",
                  "required": true,
                  "type": "string",
                  "description": "The related type such as crs (CrossSelling)"
               }
            ],
            "responses": {
               "204": {
                  "description": "The related type deleted."
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "Your profile doesn't grant you access to this operation. Please login with an appropriate user.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "400": {
                  "description": "The related type cannot be deleted, because there relationships using this related type.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "404": {
                  "description": "The related type not found.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               }
            }
         }
      },
      "/ifc-content-api/v1/templates/messages": {
         "get": {
            "tags": [
               "Message Template API"
            ],
            "summary": "Retrieve the paginated list of message templates",
            "description": "This API allow you to retrieve all the message templates. The response will be a paginated array/list of message templates. <h4>Required Functionalities<\/h4> Conteudo - Emails - Consulta",
            "parameters": [
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "page",
                  "required": false,
                  "default": 0,
                  "description": "Page number. Starts with 0. This number has no decimal places.",
                  "type": "number",
                  "in": "query"
               },
               {
                  "name": "size",
                  "required": false,
                  "default": 20,
                  "description": "The maximum number of records to retrieve. If not provided, a default value is used. This number has no decimal places.",
                  "type": "number",
                  "in": "query"
               },
               {
                  "name": "type",
                  "description": "The message type",
                  "in": "path",
                  "required": false,
                  "type": "string",
                  "enum": [
                     "email",
                     "sms"
                  ]
               }
            ],
            "responses": {
               "200": {
                  "description": "The array/list of message templates.",
                  "schema": {
                     "$ref": "./api/def/content.json#/MessageTemplatePagination"
                  }
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "Your profile doesn't grant you access to this operation. Please login with an appropriate user.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               }
            }
         },
         "post": {
            "tags": [
               "Message Template API"
            ],
            "summary": "Create a message template",
            "description": "This API allow you to create a message template. <h4>Required Functionalities<\/h4> Conteudo-Emails-Gravar <br> Gestão de Conteudo - Gestão de Templates de Email - Edição avançada de template de email",
            "parameters": [
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "body",
                  "description": "The message template to create.",
                  "in": "body",
                  "required": true,
                  "type": "object",
                  "schema": {
                     "$ref": "./api/def/content.json#/MessageTemplate"
                  }
               }
            ],
            "responses": {
               "201": {
                  "description": "The message template created.",
                  "schema": {
                     "$ref": "./api/def/content.json#/MessageTemplate"
                  }
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "Your profile doesn't grant you access to this operation. Please login with an appropriate user.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "409": {
                  "description": "The message template received allready exist.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               }
            }
         }
      },
      "/ifc-content-api/v1/templates/messages/{templateId}": {
         "get": {
            "tags": [
               "Message Template API"
            ],
            "summary": "Fetch message template",
            "description": "Use this API in order to fetch a message template by its identifier (i.e. the templateId).<h4>Required Functionalities<\/h4> Conteudo - Emails - Consulta",
            "parameters": [
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "templateId",
                  "in": "path",
                  "required": true,
                  "type": "string",
                  "description": "The message template unique identifier"
               },
               {
                  "name": "type",
                  "description": "The message type",
                  "in": "query",
                  "required": false,
                  "type": "string",
                  "enum": [
                     "email",
                     "sms"
                  ]
               }
            ],
            "responses": {
               "200": {
                  "description": "Message template found.",
                  "schema": {
                     "$ref": "./api/def/content.json#/MessageTemplate"
                  }
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "Your profile doesn't grant you access to this operation. Please login with an appropriate user.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Message template not found.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               }
            }
         },
         "put": {
            "tags": [
               "Message Template API"
            ],
            "summary": "Update a message template",
            "description": "This API allow you to update a message template. <h4>Required Functionalities<\/h4> Conteudo-Emails-Gravar<br>Gestão de Conteudo - Gestão de Templates de Email - Edição avançada de template de email",
            "parameters": [
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "templateId",
                  "in": "path",
                  "required": true,
                  "type": "string",
                  "description": "The message template unique identifier"
               },
               {
                  "name": "body",
                  "description": "The message template to update",
                  "in": "body",
                  "required": true,
                  "type": "object",
                  "schema": {
                     "$ref": "./api/def/content.json#/MessageTemplate"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Message template updated.",
                  "schema": {
                     "$ref": "./api/def/content.json#/MessageTemplate"
                  }
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "Your profile doesn't grant you access to this operation. Please login with an appropriate user.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "409": {
                  "description": "The message template received allready exist.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "404": {
                  "description": "Message template not found.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               }
            }
         },
         "delete": {
            "tags": [
               "Message Template API"
            ],
            "summary": "Delete a message template",
            "description": "This API allow you to delete a message template on Infrashop platform. <h4>Required Functionalities<\/h4> Conteudo - Emails - Gravar",
            "parameters": [
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "templateId",
                  "in": "path",
                  "required": true,
                  "type": "string",
                  "description": "The message template unique identifier"
               }
            ],
            "responses": {
               "204": {
                  "description": "The message template deleted."
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "Your profile doesn't grant you access to this operation. Please login with an appropriate user.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Message template not found.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               }
            }
         }
      },
      "/ifc-content-api/v1/messages/attributes": {
         "get": {
            "tags": [
               "Message Attributes API"
            ],
            "summary": "Retrieve the list of message attributes paginated",
            "description": "This API allow you to retrieve all the message attributes. The response will be a paginated array/list of message attributes. <h4>Required Functionalities<\/h4> Conteudo - Emails - Consulta",
            "parameters": [
               {
                  "name": "page",
                  "required": false,
                  "default": 0,
                  "description": "Page number. Starts with 0. This number has no decimal places.",
                  "type": "number",
                  "in": "query"
               },
               {
                  "name": "size",
                  "required": false,
                  "default": 20,
                  "description": "The maximum number of records to retrieve. If not provided, a default value is used. This number has no decimal places.",
                  "type": "number",
                  "in": "query"
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "type",
                  "description": "The message type",
                  "in": "query",
                  "required": false,
                  "type": "string",
                  "enum": [
                     "email",
                     "sms"
                  ]
               }
            ],
            "responses": {
               "200": {
                  "description": "The array/list of message attributes.",
                  "schema": {
                     "type": "array",
                     "items": {
                        "$ref": "./api/def/content.json#/MessageAttributesPagination"
                     }
                  }
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "Your profile doesn't grant you access to this operation. Please login with an appropriate user.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               }
            }
         },
         "post": {
            "tags": [
               "Message Attributes API"
            ],
            "summary": "Create a message attribute",
            "description": "This API allow you to create a message attribute. <h4>Required Functionalities<\/h4> Conteudo - Emails - Gravar",
            "parameters": [
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "body",
                  "description": "The message attribute to create.",
                  "in": "body",
                  "required": true,
                  "type": "object",
                  "schema": {
                     "$ref": "./api/def/content.json#/MessageAttributes"
                  }
               }
            ],
            "responses": {
               "201": {
                  "description": "The message attribute created.",
                  "schema": {
                     "$ref": "./api/def/content.json#/MessageAttributes"
                  }
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "Your profile doesn't grant you access to this operation. Please login with an appropriate user.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "409": {
                  "description": "The message attribute received allready exist.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               }
            }
         }
      },
      "/ifc-content-api/v1/messages/attributes/{attributeId}": {
         "get": {
            "tags": [
               "Message Attributes API"
            ],
            "summary": "Fetch a message attribute",
            "description": "This API allow you to fetch message attribute by its id.<h4>Required Functionalities<\/h4> Conteudo - Emails - Consulta",
            "parameters": [
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "attributeId",
                  "in": "path",
                  "required": true,
                  "type": "string",
                  "description": "The message attribute unique identifier"
               },
               {
                  "name": "type",
                  "description": "The message type",
                  "in": "path",
                  "required": false,
                  "type": "string",
                  "enum": [
                     "email",
                     "sms"
                  ]
               }
            ],
            "responses": {
               "200": {
                  "description": "The message attribute found.",
                  "schema": {
                     "$ref": "./api/def/content.json#/MessageAttributes"
                  }
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "Your profile doesn't grant you access to this operation. Please login with an appropriate user.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Message attribute not found.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               }
            }
         },
         "put": {
            "tags": [
               "Message Attributes API"
            ],
            "summary": "Update a message attribute",
            "description": "This API allow you to update a message attribute. <h4>Required Functionalities<\/h4> Conteudo - Emails - Gravar",
            "parameters": [
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "attributeId",
                  "in": "path",
                  "required": true,
                  "type": "string",
                  "description": "The message attribute unique identifier"
               },
               {
                  "name": "body",
                  "description": "The message attribute to update",
                  "in": "body",
                  "required": true,
                  "type": "object",
                  "schema": {
                     "$ref": "./api/def/content.json#/MessageAttributes"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "The message attribute updated.",
                  "schema": {
                     "$ref": "./api/def/content.json#/MessageAttributes"
                  }
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "Your profile doesn't grant you access to this operation. Please login with an appropriate user.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "409": {
                  "description": "The message attribute received allready exist.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "404": {
                  "description": "The message attribute not found.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               }
            }
         },
         "delete": {
            "tags": [
               "Message Attributes API"
            ],
            "summary": "Delete a message attribute",
            "description": "This API allow you to delete a message attribute, that was not been used by any message template.<h4>Required Functionalities<\/h4> Conteudo - Emails - Gravar",
            "parameters": [
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "attributeId",
                  "in": "path",
                  "required": true,
                  "type": "string",
                  "description": "The message attribute unique identifier"
               }
            ],
            "responses": {
               "204": {
                  "description": "The message attribute deleted."
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "Your profile doesn't grant you access to this operation. Please login with an appropriate user.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "400": {
                  "description": "The message attribute cannot be deleted, because there are message templates using this message attribute.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "404": {
                  "description": "The message attribute not found.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               }
            }
         }
      },
      "/ifc-content-api/v1/campaigns": {
         "get": {
            "tags": [
               "Campaign API"
            ],
            "summary": "Retrieves all campaign",
            "description": "Retrieves all campaign, the response includes campaign id, name, active, beginDate, endDate.<h4>Required Functionalities<\/h4> Gestão de Conteúdo - Gestão de Banner - Gestão de Campanha - Consultar",
            "parameters": [
               {
                  "name": "campaignId",
                  "in": "path",
                  "required": false,
                  "type": "integer",
                  "format": "int64",
                  "description": "The campaign id is a unique identifier for the campaign."
               },
               {
                  "name": "name",
                  "in": "path",
                  "required": false,
                  "type": "string",
                  "description": "The name for this specific campaign."
               },
               {
                  "name": "active",
                  "in": "path",
                  "required": false,
                  "type": "boolean",
                  "description": "The initial date that the campaign is available."
               },
               {
                  "name": "beginDate",
                  "in": "path",
                  "required": false,
                  "type": "string",
                  "description": "The initial date that the campaign is available."
               },
               {
                  "name": "endDate",
                  "in": "path",
                  "required": false,
                  "type": "string",
                  "description": "TThe final date that the campaign is available."
               },
               {
                  "name": "page",
                  "in": "query",
                  "required": false,
                  "type": "number",
                  "default": 0,
                  "description": "Page number. Starts with 0. This number has no decimal places."
               },
               {
                  "name": "size",
                  "in": "query",
                  "required": false,
                  "type": "number",
                  "default": 20,
                  "description": "The maximum number of records to retrieve. If not provided, a default value is used. This number has no decimal places."
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "The campaigns found.",
                  "schema": {
                     "$ref": "#/definitions/Campaign"
                  }
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "Your profile doesn't grant you access to this operation. Please login with an appropriate user.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Campaigns not found.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               }
            }
         },
         "post": {
            "tags": [
               "Campaign API"
            ],
            "summary": "Create a campaign.",
            "description": "Create a new Campaign, this operation allow to create a new campaign with all information to show your campaign on the website  <h4>Required Functionalities<\/h4> Gestão de Conteúdo - Gestão de Banner - Gestão de Campanha - Gravar",
            "parameters": [
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "body",
                  "description": "The request campaign to create.",
                  "in": "body",
                  "required": true,
                  "type": "object",
                  "schema": {
                     "$ref": "#/definitions/Campaign"
                  }
               }
            ],
            "responses": {
               "201": {
                  "description": "The campaign created.",
                  "schema": {
                     "$ref": "#/definitions/Campaign"
                  }
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "Your profile doesn't grant you access to this operation. Please login with an appropriate user.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "409": {
                  "description": "The campaign received allready exist.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               }
            }
         }
      },
      "/ifc-content-api/v1/campaigns/{campaignId}": {
         "get": {
            "tags": [
               "Campaign API"
            ],
            "summary": "Retrieve campaign by id.",
            "description": "Gets a specific campaign by id.<h4>Required Functionalities<\/h4> Gestão de Conteúdo - Gestão de Banner - Gestão de Campanha - Consultar",
            "parameters": [
               {
                  "name": "campaignId",
                  "in": "path",
                  "required": true,
                  "type": "integer",
                  "format": "int64",
                  "description": "The campaign id is a unique identifier for the campaign."
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "The campaigns found.",
                  "schema": {
                     "$ref": "#/definitions/Campaign"
                  }
               },
               "401": {
                  "description": "Please provide a valid authentication token.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "Your profile doesn't grant you access to this operation. Please login with an appropriate user.",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Campaigns not found.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               }
            }
         },
         "delete": {
            "tags": [
               "Campaign API"
            ],
            "summary": "Delete a specific campaign",
            "description": "Delete a specific campaign or list campaign by id.<h4>Required Functionalities<\/h4> Gestão de Conteúdo - Gestão de Banner - Gestão de Campanha - Gravar",
            "parameters": [
               {
                  "name": "campaignId",
                  "in": "path",
                  "required": true,
                  "type": "array",
                  "items": {
                     "type": "integer",
                     "format": "int64"
                  },
                  "description": "The list campaign id is a unique identifier for the campaign."
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "204": {
                  "description": "Campaign successfuly deleted"
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Campaign not found"
               }
            }
         },
         "put": {
            "tags": [
               "Campaign API"
            ],
            "summary": "Update a campaign",
            "description": "Update a specific campaign by id.<h4>Required Functionalities<\/h4> Gestão de Conteúdo - Gestão de Banner - Gestão de Campanha - Gravar",
            "parameters": [
               {
                  "name": "campaignId",
                  "in": "path",
                  "required": true,
                  "type": "integer",
                  "format": "int64",
                  "description": "The campaign id is a unique identifier for the campaign."
               },
               {
                  "name": "Authorization",
                  "description": "Authentication token provided by auth API, like \"Bearer 926c6e54-df23-4da4-be38-b002f0454720\"",
                  "in": "header",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Newly created content.",
                  "schema": {
                     "$ref": "#/definitions/Campaign"
                  }
               },
               "400": {
                  "description": "Invalid content info. Please check error message for more info.",
                  "schema": {
                     "$ref": "./api/def/mercury-base.json#/Error"
                  }
               },
               "401": {
                  "description": "User not authenticated",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "403": {
                  "description": "User is not authorized",
                  "schema": {
                     "$ref": "./api/def/oauth.json#/InvalidToken"
                  }
               },
               "404": {
                  "description": "Campaign not found"
               }
            }
         }
      }
   },
   "definitions": {
      "UDAValueArray": {
         "type": "array",
         "items": [
            {
               "$ref": "./api/def/uda.json#/UDAValue"
            }
         ]
      },
      "ContentPagination": {
         "type": "object",
         "description": "Standard pagination envelope response. Content entries will be available in \"items\".",
         "properties": {
            "links": {
               "type": "array",
               "description": "Collection of page links. You will find up to 5 links:<ul><li>self - link to this same page<\/li><li>first - link to the first page<\/li><li>last - link to the last page<\/li><li>next - link to the next page. This will be only presented when there is a next page<\/li><li>previous - link to the previous page. This will be only presented when there is a previous page<\/li><\/ul>",
               "items": [
                  {
                     "$ref": "#/definitions/Link"
                  }
               ]
            },
            "items": {
               "type": "array",
               "description": "Array containing staging entries.",
               "items": [
                  {
                     "$ref": "#/definitions/Content"
                  }
               ]
            }
         },
         "required": [
            "links",
            "items"
         ]
      },
      "Link": {
         "type": "object",
         "description": "Page link.",
         "properties": {
            "rel": {
               "type": "string",
               "description": "Link type"
            },
            "href": {
               "type": "string",
               "description": "Complete link"
            }
         },
         "required": [
            "rel",
            "href"
         ]
      },
      "Content": {
         "type": "object",
         "description": "This entity defines a dynamic content.",
         "properties": {
            "contentId": {
               "type": "string",
               "description": "Content unique identifier. When creating a Dynamic content, this is optional. If not provided, an internal numeric ID will be automatically assigned. If provided, it has to be unique - otherwise an error is raised. Obs: Must be required only on PUT."
            },
            "description": {
               "type": "string",
               "description": "Content description. This is a human readable description of this content."
            },
            "contentTp": {
               "type": "string",
               "description": "The content type. This will define how this content will he handled in the website. Possible type are 'ART' (generic dynamic content) and 'MNU' (website navigation flow, a.k.a. menu).",
               "enum": [
                  "MNU",
                  "ART"
               ]
            },
            "content": {
               "type": "string",
               "description": "The actual content. This is the content that will be rendered in the website."
            },
            "title": {
               "type": "string",
               "description": "Content title. This is the title that is rendered within the page in a \"h\" type tag (h1, h2, etc.)."
            },
            "css": {
               "type": "string",
               "description": "A css URL that will be added to this content's page, when it is rendered in its own page. This css is not added to the page when the content is used within a product or category page, for example."
            },
            "webAnalyticsId": {
               "type": "string",
               "description": "Id that is sent to the webanalytics tool when this content's page is rendered."
            },
            "pageTitle": {
               "type": "string",
               "description": "Content page title. This is the value that is rendered within \"title\" HTML tag when this content's page is rendered."
            },
            "metaKeywords": {
               "type": "string",
               "description": "Content page keywords. This is the value that is rendered within \"meta\" HTML tag (keywords) when this content's page is rendered."
            },
            "metaDescription": {
               "type": "string",
               "description": "Content page description. This is the value that is rendered within \"meta\" HTML tag (description) when this content's page is rendered."
            },
            "metaRobots": {
               "type": "string",
               "description": "This is the value that is rendered within \"meta\" HTML tag (robots) when this content's page is rendered."
            },
            "tagHeading1": {
               "type": "string",
               "description": "Alternative heading 1 (H1) html tag for this content. If the layout is enabled to use it, it will be rendered within this content's page."
            },
            "updDt": {
               "type": "string",
               "description": "Latest content update date. This value is read only."
            }
         },
         "required": [
            "description",
            "content",
            "title"
         ]
      },
      "ImageType": {
         "type": "object",
         "description": "This entity defines an image type.",
         "example": {
            "imageTypeId": "pp",
            "name": "Thumbnail",
            "description": "Product thumbnail - Shown just below product image.",
            "sizeWidth": 800,
            "sizeHeight": 600,
            "urlUnavailable": "/images/unavailable/unavailable_gp.jpg",
            "type": "NOR",
            "ratioCompression": 0.95
         },
         "properties": {
            "imageTypeId": {
               "type": "string",
               "description": "The source name id, which is an unique identifier for the image type."
            },
            "name": {
               "type": "string",
               "description": "Image type name. Just few words telling what this image type is used for."
            },
            "description": {
               "type": "string",
               "description": "Image type description. You can enter a more detailed information if you want to."
            },
            "sizeWidth": {
               "type": "number",
               "description": "The image size width for this type. This number has no decimal places."
            },
            "sizeHeight": {
               "type": "number",
               "description": "The image size height for this type. This number has no decimal places."
            },
            "urlUnavailable": {
               "type": "string",
               "description": "The url image, used when the image of product is not available."
            },
            "type": {
               "type": "string",
               "description": "Short description for the image type"
            },
            "ratioCompression": {
               "type": "number",
               "description": "The compression ratio of image type. The compression ratio is between 0.1 to 1.0, therefore the highest quality is 1.0 and the lowest is 0.1."
            }
         },
         "required": [
            "imageTypeId",
            "name",
            "description",
            "sizeWidth",
            "sizeHeight",
            "urlUnavailable",
            "type",
            "ratioCompression"
         ]
      },
      "BannerPagination": {
         "type": "object",
         "description": "Standard pagination envelope response. Banner entries will be available in \"items\".",
         "properties": {
            "links": {
               "type": "array",
               "description": "Collection of page links. You will find up to 5 links:<ul><li>self - link to this same page<\/li><li>first - link to the first page<\/li><li>last - link to the last page<\/li><li>next - link to the next page. This will be only presented when there is a next page<\/li><li>previous - link to the previous page. This will be only presented when there is a previous page<\/li><\/ul>",
               "items": [
                  {
                     "$ref": "#/definitions/Link"
                  }
               ]
            },
            "items": {
               "type": "array",
               "description": "Array containing Banner entries.",
               "items": [
                  {
                     "$ref": "#/definitions/Banner"
                  }
               ]
            }
         },
         "required": [
            "links",
            "items"
         ]
      },
      "Banner": {
         "type": "object",
         "description": "The banner information",
         "example": {
            "bannerId": 123654,
            "bannerTemplateId": 789654,
            "name": "Main Home - banner center",
            "campaignId": 741258,
            "levels": [
               1369852
            ],
            "bannerLink": "www.myStore.com.br",
            "bannerTitle": "The Home Banner",
            "startDate": "2016-08-30T14:19:10.265Z",
            "endDate": "2016-09-30T14:19:10.265Z",
            "keywords": [
               "Eletrônicos"
            ],
            "tags": [
               "garantia-vitalicia"
            ],
            "positions": [
               "HPBE1"
            ],
            "priority": "1",
            "active": "Y",
            "content": "<div><h1>The content of banner<\/h1><div class='img'><img src='imageURL.prefixstatic/images/myBannerImage.png'><\/div>",
            "advancedEdition": "Y",
            "bannerAttributes": [
               {
                  "name": "Title (Required)",
                  "value": "My Banner Title"
               }
            ],
            "webAnalyticsId": "123qwe597"
         },
         "properties": {
            "bannerId": {
               "type": "number",
               "description": "The banner id is a unique identifier for the banner. This number has no decimal places. Obs: Must be required only on POST and PUT. "
            },
            "bannerTemplateId": {
               "type": "number",
               "description": "The banner template id is a unique identifier for the banner template. This number has no decimal places."
            },
            "name": {
               "type": "string",
               "description": "The name for this specific banner template."
            },
            "campaignId": {
               "type": "number",
               "description": "The campaign id is a unique identifier for the campaign associated with this banner. This number has no decimal places."
            },
            "levels": {
               "type": "array",
               "items": {
                  "type": "integer"
               },
               "description": "The list of level identification associated with this banner. This number has no decimal places."
            },
            "bannerLink": {
               "type": "string",
               "description": "The URL that the user will be reditect when click on banner."
            },
            "bannerTitle": {
               "type": "string",
               "description": "The title that appears when the user hover over the banner."
            },
            "startDate": {
               "type": "string",
               "format": "date-time",
               "description": "The initial date that the banner is available."
            },
            "endDate": {
               "type": "string",
               "format": "date-time",
               "description": "The final date that the banner is available."
            },
            "keywords": {
               "type": "array",
               "items": {
                  "type": "string"
               },
               "description": "The list of keywords is used to sort the banner in the site search, this key word will be used as reference for the banner appear on the site"
            },
            "tags": {
               "type": "array",
               "items": {
                  "type": "string"
               },
               "description": "The list of tags is used to sort the banner in the site search too, this bannerTag will be used as reference for the banner appear on the site"
            },
            "positions": {
               "type": "array",
               "items": {
                  "type": "string"
               },
               "description": "The List of banner position identification used to define the position of banner on site, for example if your Home site has three banners which banners will be appear on positions TOP, RIGHT and LEFT will be defined by banner position Id"
            },
            "priority": {
               "type": "number",
               "description": "The priority will be used to select the specific banner in case we have more than one banner registered to the same position. This number has no decimal places."
            },
            "active": {
               "type": "string",
               "enum": [
                  "Y",
                  "N"
               ],
               "description": "Flag to active or deactive the banner on site."
            },
            "content": {
               "type": "string",
               "description": "Represents the HTML content of banner on site, the content is auto generated by banner template, however you can edit them using advanced Edition."
            },
            "advancedEdition": {
               "type": "string",
               "enum": [
                  "Y",
                  "N"
               ],
               "description": "Flag that indicates if a banner content will be defined by content attribute."
            },
            "bannerAttributes": {
               "type": "array",
               "items": {
                  "$ref": "#/definitions/BannerAttributes"
               },
               "description": "All banner attributes to be defined."
            },
            "webAnalyticsId": {
               "type": "string",
               "description": "The Web Analytics id is a unique identifier for the Web Analytics associated with this banner."
            }
         },
         "required": [
            "name",
            "campaignId",
            "active",
            "bannerTemplateId",
            "startDate",
            "endDate",
            "positions",
            "bannerAttributes"
         ]
      },
      "BannerPosition": {
         "type": "object",
         "description": "The banner position information",
         "example": {
            "positionId": "BDB",
            "name": "Banner Destaque Baunilha"
         },
         "properties": {
            "positionId": {
               "type": "string",
               "description": "The position id is a unique identifier for the banner position. "
            },
            "name": {
               "type": "string",
               "description": "The name for this specific banner position."
            }
         },
         "required": [
            "positionId",
            "name"
         ]
      },
      "BannerPositionList": {
         "type": "object",
         "description": "The List of banner position information",
         "example": [
         	{
            	"positionId": "BDB",
            	"name": "Banner Destaque Baunilha"
         	}
         ],
         "properties": {
            "positionId": {
               "type": "string",
               "description": "The position id is a unique identifier for the banner position. "
            },
            "name": {
               "type": "string",
               "description": "The name for this specific banner position."
            }
         },
         "required": [
            "positionId"
         ]
      },
      "BannerPositionPaginated": {
         "type": "object",
         "description": "Standard pagination envelope response. Banner Positions entries will be available in \"items\".",
         "properties": {
            "links": {
               "type": "array",
               "description": "Collection of page links. You will find up to 5 links:<ul><li>self - link to this same page<\/li><li>first - link to the first page<\/li><li>last - link to the last page<\/li><li>next - link to the next page. This will be only presented when there is a next page<\/li><li>previous - link to the previous page. This will be only presented when there is a previous page<\/li><\/ul>.",
               "items": [
                  {
                     "$ref": "#/definitions/Link"
                  }
               ]
            },
            "items": {
               "type": "array",
               "description": "The List of banner position information.",
               "items": [
                  {
                     "$ref": "#/definitions/BannerPosition"
                  }
               ]
            }
         },
         "required": [
            "links",
            "items"
         ]
      },
      "BannerAttributes": {
         "type": "object",
         "description": "The substitution attribution for a banner",
         "example": {
            "name": "Title (Required)",
            "value": "My Banner Title"
         },
         "properties": {
            "name": {
               "type": "string",
               "description": "The name of banner attribute that will be used on the banner. for example\n  The informed attribute will be substituted on banner html"
            },
            "value": {
               "type": "string",
               "description": "The value that will be show on banner template HTML with this informed name"
            },
            "others": {
               "type": "object",
               "description": "The valid JSON that represents the others values of banner attributes.",
               "items": {
                  "$ref": "#/definitions/OthersInformation"
               }
            }
         },
         "required": [
            "name",
            "value"
         ]
      },
      "BannerTemplate": {
         "type": "object",
         "description": "The banner template information",
         "example": {
            "bannerTemplateId": 123987,
            "name": "The banner template department",
            "template": "<h1>$title<\/h1> <div>\n    <h1>My Department Banner Template Html<\/h1>\n<\/div>",
            "advanced": "N",
            "substitutionAttributes": [
               {
                  "name": "title",
                  "adminLabel": "Title (Required)",
                  "isRequired": "Y",
                  "type": "Text",
                  "others": {

                  }
               }
            ]
         },
         "properties": {
            "bannerTemplateId": {
               "type": "number",
               "description": "The banner template id is a unique identifier for the banner template. This number has no decimal places. Obs: Must be required only on PUT."
            },
            "name": {
               "type": "string",
               "description": "The name for this specific banner template"
            },
            "template": {
               "type": "string",
               "description": "The template used for this banner template"
            },
            "advanced": {
               "type": "string",
               "enum": [
                  "Y",
                  "N"
               ],
               "description": "If \"Y\", that means that this is a advanced type banner template. If so, \"template\" and \"substitutionAttributes\" are not relevant, as the user will be able to edit the final HTML of the banner. If you provide any one of those two attributes when creating or updating a banner template, tha API will return error 400"
            },
            "substitutionAttributes": {
               "type": "array",
               "items": {
                  "$ref": "#/definitions/BannerTemplateSubstitutionAttributes"
               }
            }
         },
         "required": [
            "name",
            "advanced"
         ]
      },
      "BannerTemplateSubstitutionAttributes": {
         "type": "object",
         "description": "The substitution attribution for a banner template",
         "example": {
            "name": "title",
            "adminLabel": "Title (Required)"
         },
         "properties": {
            "name": {
               "type": "string",
               "description": "The name of substitution attribute that will be used on the banner template. for example\n  The title attribute will be substituted on html template using a monetary \n  simbol \"$\", that is, the title attribute on html template need still on html banner template like that \"$title\""
            },
            "adminLabel": {
               "type": "string",
               "description": "The admin Label is the information that will appear on admin application for the final user be able to see and edit the attribute value for your banner"
            },
            "isRequired": {
               "type": "string",
               "enum": [
                  "Y",
                  "N"
               ],
               "description": "The attribute define if the attribute is required in banner template."
            },
            "type": {
               "type": "string",
               "description": "The type of the attribute, the values permited are text, number, boolean or date."
            },
            "others": {
               "type": "object",
               "description": "The valid JSON that represents the others values of banner attributes.",
               "items": {
                  "$ref": "#/definitions/OthersInformation"
               }
            }
         },
         "required": [
            "name",
            "adminLabel"
         ]
      },
      "RatingListPagination": {
         "type": "object",
         "description": "Standard pagination envelope response. RatingList entries will be available in \"items\".",
         "properties": {
            "links": {
               "type": "array",
               "description": "Collection of page links. You will find up to 5 links:<ul><li>self - link to this same page<\/li><li>first - link to the first page<\/li><li>last - link to the last page<\/li><li>next - link to the next page. This will be only presented when there is a next page<\/li><li>previous - link to the previous page. This will be only presented when there is a previous page<\/li><\/ul>",
               "example": [
                  {
                     "rel": "self",
                     "href": "http://ws-mystore.a8e.net.br/ifc-content-api/v1/ratings?page=0&size=20"
                  },
                  {
                     "rel": "first",
                     "href": "http://ws-mystore.a8e.net.br/ifc-content-api/v1/ratings?page=0&size=20"
                  },
                  {
                     "rel": "last",
                     "href": "http://ws-mystore.a8e.net.br/ifc-content-api/v1/ratings?page=1&size=20"
                  },
                  {
                     "rel": "next",
                     "href": "http://ws-mystore.a8e.net.br/ifc-content-api/v1/ratings?page=1&size=20"
                  }
               ],
               "items": [
                  {
                     "$ref": "#/definitions/Link"
                  }
               ]
            },
            "items": {
               "type": "array",
               "description": "Array containing RatingList entries.",
               "items": {
                  "$ref": "#/definitions/Rating"
               }
            }
         },
         "required": [
            "links",
            "items"
         ]
      },
      "BestSellingSkusStats": {
         "type": "object",
         "description": "This arrays containing skus not produced",
         "properties": {
            "skuId": {
               "type": "string",
               "description": "SKU unique identifier."
            },
            "skuName": {
               "type": "string",
               "description": "The name of SKU displayed on the dashboard."
            },
            "currentStock": {
               "type": "number",
               "description": "The number of pieces currently in stock. It includes all stock types. This number has no decimal places."
            },
            "unitsSold": {
               "type": "number",
               "description": "The number of pieces sold in the provicec date range. This number has no decimal places."
            },
            "price": {
               "type": "number",
               "description": "The price of this SKU at this moment."
            }
         },
         "required": [
            "skuId",
            "skuName",
            "currentStock",
            "unitsSold",
            "price"
         ],
         "example": {
            "skuId": 100991,
            "skuName": "AFTERNON DRESS DE VISCOSE STRETCH MARINHO COM LIST LARGA NAUTICA",
            "currentStock": 6168,
            "unitsSold": 2121,
            "price": 20.99
         }
      },
      "StatsSkusNotProduced": {
         "type": "object",
         "description": "This arrays containing skus not produced",
         "properties": {
            "skuId": {
               "type": "string",
               "description": "The Sku's identifier"
            },
            "skuName": {
               "type": "string",
               "description": "The Sku's name"
            }
         },
         "required": [
            "skuName",
            "skuId"
         ],
         "example": {
            "skuId": 100991,
            "skuName": "AFTERNON DRESS DE VISCOSE STRETCH MARINHO COM LIST LARGA NAUTICA"
         }
      },
      "Rating": {
         "type": "object",
         "description": "This entity defines a rating entry",
         "properties": {
            "commentary": {
               "$ref": "#/definitions/RatingCommentary"
            },
            "customer": {
               "$ref": "#/definitions/RatingCustomer"
            },
            "rating": {
               "$ref": "#/definitions/RatingItens"
            },
            "ratingId": {
               "type": "number",
               "description": "The rating's id. This number has no decimal places."
            },
            "entityId": {
               "type": "string",
               "description": "The entity's id. For example, if the rating it's about a product, this id will be the <b>productId<\/b>; if it's about an order, it will be the <b>orderId<\/b> etc."
            },
            "insertionDate": {
               "type": "string",
               "format": "date-time",
               "description": "The date in which rating was made."
            },
            "statusDate": {
               "type": "string",
               "format": "date-time",
               "description": "The date in which rating's status was updated."
            },
            "likeCount": {
               "type": "number",
               "description": "Number of likes that rating received. This number has no decimal places."
            },
            "dislikeCount": {
               "type": "number",
               "description": "Number of dislikes that rating received. This number has no decimal places."
            },
            "showEmail": {
               "type": "boolean",
               "description": "Controls the display of e-mail: <b>true<\/b> to display; <b>false<\/b> to not display."
            },
            "status": {
               "type": "string",
               "description": "The rating's status. <b>\"APR\"<\/b> for approved status, <b>\"PEN\"<\/b> for pendent, <b>\"REP\"<\/b> for reproved or <b>\"ARE\"<\/b> for automatically reproved."
            },
            "type": {
               "type": "string",
               "description": "The rating's type. The value is dynamic but most common are: <b>\"PRD\"<\/b> for product's ratings, <b>\"SHP\"<\/b> for shop's rating, <b>\"RTR\"<\/b> for rating of rating."
            }
         },
         "example": {
            "commentary": {
               "body": "Esse produto possui uma qualidade de som perfeita além de ser de alta durabilidade.",
               "subject": "Sobre o produto XYZ"
            },
            "customer": {
               "city": "São Paulo",
               "email": "infratech.teste@gmail.com",
               "name": "Infra Tech",
               "optIn": false,
               "state": "SP"
            },
            "rating": {
               "rating1": 4,
               "rating2": 4,
               "rating3": 5,
               "rating4": 5,
               "ratingAvg": 4.5
            },
            "ratingId": 226055,
            "entityId": "217421",
            "insertionDate": "2016-06-28T14:19:10.265Z",
            "statusDate": "2016-06-28T14:19:10.265Z",
            "likeCount": 4,
            "dislikeCount": 0,
            "showEmail": false,
            "status": "APR",
            "type": "PRD"
         },
         "required": [
            "customer",
            "ratingId",
            "insertionDate",
            "showEmail",
            "status",
            "type"
         ]
      },
      "RatingCommentary": {
         "type": "object",
         "description": "This entity defines a rating commentary",
         "properties": {
            "body": {
               "type": "string",
               "description": "The rating's body/content"
            },
            "subject": {
               "type": "string",
               "description": "The rating's subject."
            }
         }
      },
      "RatingCustomer": {
         "type": "object",
         "description": "This entity defines a customer that made the rating",
         "properties": {
            "city": {
               "type": "string",
               "description": "The customer's city"
            },
            "email": {
               "type": "string",
               "description": "The customer's e-mail"
            },
            "name": {
               "type": "string",
               "description": "The customer's name"
            },
            "optIn": {
               "type": "boolean",
               "description": "Indicates if the customer want to receive offers by e-mail: <b>true<\/b> to receive; <b>false<\/b> to not receive"
            },
            "state": {
               "type": "string",
               "description": "The customer's state."
            }
         },
         "required": [
            "name",
            "optIn"
         ]
      },
      "RatingItens": {
         "type": "object",
         "description": "This entity defines the customer's ratings for each item individually. These itens can change they meaning according with each store and only 4 different ratings can be done.",
         "properties": {
            "rating1": {
               "type": "number",
               "description": "The customer's rating for item. This number has no decimal places."
            },
            "rating2": {
               "type": "number",
               "description": "The customer's rating for item 2. This number has no decimal places."
            },
            "rating3": {
               "type": "number",
               "description": "The customer's rating for item 3. This number has no decimal places."
            },
            "rating4": {
               "type": "number",
               "description": "The customer's rating for item 4. This number has no decimal places."
            },
            "ratingAvg": {
               "type": "number",
               "description": "The average number of the ratings."
            }
         }
      },
      "SaleChannelListPagination": {
         "type": "object",
         "description": "Standard pagination envelope response. SaleChannel entries will be available in \"items\".",
         "properties": {
            "links": {
               "type": "array",
               "description": "Collection of page links. You will find up to 5 links:<ul><li>self - link to this same page<\/li><li>first - link to the first page<\/li><li>last - link to the last page<\/li><li>next - link to the next page. This will be only presented when there is a next page<\/li><li>previous - link to the previous page. This will be only presented when there is a previous page<\/li><\/ul>",
               "example": [
                  {
                     "rel": "self",
                     "href": "http://ws-mystore.a8e.net.br/ifc-content-api/v1/salechannels?page=0&size=20"
                  },
                  {
                     "rel": "first",
                     "href": "http://ws-mystore.a8e.net.br/ifc-content-api/v1/salechannels?page=0&size=20"
                  },
                  {
                     "rel": "last",
                     "href": "http://ws-mystore.a8e.net.br/ifc-content-api/v1/salechannels?page=1&size=20"
                  },
                  {
                     "rel": "next",
                     "href": "http://ws-mystore.a8e.net.br/ifc-content-api/v1/salechannels?page=1&size=20"
                  }
               ],
               "items": [
                  {
                     "$ref": "#/definitions/Link"
                  }
               ]
            },
            "items": {
               "type": "array",
               "description": "Array containing SaleChannel entries.",
               "items": {
                  "$ref": "#/definitions/SaleChannel"
               }
            }
         },
         "required": [
            "links",
            "items"
         ]
      },
      "SaleChannel": {
         "type": "object",
         "description": "This entity defines a SaleChannel entry",
         "example": {
            "id": 1,
            "saleChannelId": "INT",
            "name": "Internet",
            "description": "Canal de venda pela internet"
         },
         "properties": {
            "id": {
               "type": "number",
               "description": "The SaleChannel's id. This number has no decimal places."
            },
            "saleChannelId": {
               "type": "string",
               "description": "The SaleChannel's id. For example, if the sale channel is Internet, the id is <b>\"INT\"<\/b>; if is Teleshopping, the id is <b>\"TEL\"<\/b> etc."
            },
            "name": {
               "type": "string",
               "description": "The SaleChannel's name."
            },
            "description": {
               "type": "string",
               "description": "The SaleChannel's description."
            }
         },
         "required": [
            "id",
            "saleChannelId",
            "name",
            "description"
         ]
      },
      "StaticSupport": {
         "type": "object",
         "description": "This entity defines a StaticSupport entry",
         "example": {
            "name": "stopper-oferta",
            "description": "Imagem de stopper de oferta",
            "url": "http://i-recco-dev.a8e.net.br/static/images/stopper-oferta.png",
            "type": "img"
         },
         "properties": {
            "staticId": {
               "type": "number",
               "description": "The id of static. This number has no decimal places and is required in the PUT API."
            },
            "name": {
               "type": "string",
               "description": "The name of the static."
            },
            "description": {
               "type": "string",
               "description": "The description of the static."
            },
            "url": {
               "type": "string",
               "description": "The URL of the static."
            },
            "type": {
               "type": "string",
               "description": "The type of the static, e.g: pdf, img, txt and etc."
            }
         },
         "required": [
            "name",
            "description",
            "type"
         ]
      },
      "StaticSupportResponse": {
         "type": "object",
         "description": "This entity defines a StaticSupport entry",
         "example": {
            "links": [],
            "staticId": 123,
            "name": "stopper-oferta",
            "description": "Imagem de stopper de oferta",
            "url": "http://i-recco-dev.a8e.net.br/static/images/stopper-oferta.png",
            "type": "img"
         },
         "properties": {
            "staticId": {
               "type": "number",
               "description": "The id of static. This number has no decimal places."
            },
            "name": {
               "type": "string",
               "description": "The name of the static."
            },
            "description": {
               "type": "string",
               "description": "The description of the static."
            },
            "url": {
               "type": "string",
               "description": "The URL of the static."
            },
            "type": {
               "type": "string",
               "description": "The type of the static, e.g: pdf, img, txt and etc."
            }
         },
         "required": [
            "name",
            "description",
            "type"
         ]
      },
      "StaticSupportResponsePagination": {
         "type": "object",
         "description": "Standard pagination envelope response. Static Support entries will be available in \"items\".",
         "properties": {
            "links": {
               "type": "array",
               "description": "Collection of page links. You will find up to 5 links:<ul><li>self - link to this same page<\/li><li>first - link to the first page<\/li><li>last - link to the last page<\/li><li>next - link to the next page. This will be only presented when there is a next page<\/li><li>previous - link to the previous page. This will be only presented when there is a previous page<\/li><\/ul>",
               "items": [
                  {
                     "$ref": "#/definitions/Link"
                  }
               ]
            },
            "items": {
               "type": "array",
               "description": "Array containing Static Support entries.",
               "items": [
                  {
                     "$ref": "StaticSupportResponse"
                  }
               ]
            }
         },
         "required": [
            "links",
            "items"
         ]
      },
      "SkusNotProduced": {
         "type": "object",
         "description": "The list of the skus not produced.",
         "properties": {
            "links": {
               "type": "array",
               "description": "Collection of page links. You will find up to 5 links:<ul><li>self - link to this same page<\/li><li>first - link to the first page<\/li><li>last - link to the last page<\/li><li>next - link to the next page. This will be only presented when there is a next page<\/li><li>previous - link to the previous page. This will be only presented when there is a previous page<\/li><\/ul>",
               "example": [
                  {
                     "rel": "self",
                     "href": "http://localhost:7001/ifc-content-api/v1/stats/skuProductionStatus?page=0&size=5"
                  },
                  {
                     "rel": "first",
                     "href": "http://localhost:7001/ifc-content-api/v1/stats/skuProductionStatus?page=0&size=5"
                  },
                  {
                     "rel": "last",
                     "href": "http://localhost:7001/ifc-content-api/v1/stats/skuProductionStatus?page=0&size=5"
                  },
                  {
                     "rel": "next",
                     "href": "http://localhost:7001/ifc-content-api/v1/stats/skuProductionStatus?page=0&size=5"
                  }
               ],
               "items": [
                  {
                     "$ref": "#/definitions/Link"
                  }
               ]
            },
            "items": {
               "type": "array",
               "description": "Array containing skus not produced.",
               "items": {
                  "$ref": "#/definitions/StatsSkusNotProduced"
               }
            }
         }
      },
      "StatsBestSelling": {
         "type": "object",
         "description": "The list of the skus not produced.",
         "properties": {
            "links": {
               "type": "array",
               "description": "Collection of page links. You will find up to 5 links:<ul><li>self - link to this same page<\/li><li>first - link to the first page<\/li><li>last - link to the last page<\/li><li>next - link to the next page. This will be only presented when there is a next page<\/li><li>previous - link to the previous page. This will be only presented when there is a previous page<\/li><\/ul>",
               "example": [
                  {
                     "rel": "self",
                     "href": "http://localhost:7001/ifc-content-api/v1/stats/skuProductionStatus?page=0&size=5"
                  },
                  {
                     "rel": "first",
                     "href": "http://localhost:7001/ifc-content-api/v1/stats/skuProductionStatus?page=0&size=5"
                  },
                  {
                     "rel": "last",
                     "href": "http://localhost:7001/ifc-content-api/v1/stats/skuProductionStatus?page=0&size=5"
                  },
                  {
                     "rel": "next",
                     "href": "http://localhost:7001/ifc-content-api/v1/stats/skuProductionStatus?page=0&size=5"
                  }
               ],
               "items": [
                  {
                     "$ref": "#/definitions/Link"
                  }
               ]
            },
            "items": {
               "type": "array",
               "description": "Array containing skus not produced.",
               "items": {
                  "$ref": "#/definitions/BestSellingSkusStats"
               }
            }
         }
      },
      "StatsCalculation": {
         "type": "object",
         "description": "The calculation of the statistics.",
         "properties": {
            "producedSkus": {
               "type": "number",
               "description": "The sum of produced SKUs in stock. This number has no decimal places."
            },
            "notProducedSkus": {
               "type": "number",
               "description": "The sum of not produced SKUs in stock. This number has no decimal places."
            },
            "stockSkus": {
               "type": "number",
               "description": "Total of SKUs in stock. This number has no decimal places."
            },
            "itemsStock": {
               "type": "number",
               "description": "Total of items in stock. This number has no decimal places."
            }
         },
         "example": {
            "producedSkus": 4209,
            "notProducedSkus": 1959,
            "stockSkus": 6168,
            "itemsStock": 616733762
         },
         "required": [
            "producedSkus",
            "notProducedSkus",
            "stockSkus",
            "itemsStock"
         ]
      },
      "AsyncMetadataResponse": {
         "type": "object",
         "description": "The sheet response link.",
         "properties": {
            "asyncMetadataId": {
               "type": "number",
               "description": "Async metadata unique identifier. This number has no decimal places."
            },
            "messageBuffer": {
               "type": "string",
               "description": "Process buffer"
            },
            "totalRecords": {
               "type": "number",
               "description": "Number of records total. This number has no decimal places."
            },
            "processedRecords": {
               "type": "number",
               "description": "Number of records already processed. This number has no decimal places."
            },
            "failedRecords": {
               "type": "number",
               "description": "Number of records that failed. This number has no decimal places."
            },
            "startDate": {
               "type": "date",
               "format": "date",
               "description": "Start Date"
            },
            "lastUpdate": {
               "type": "date",
               "format": "date",
               "description": "Last Update"
            },
            "inErrorState": {
               "type": "boolean",
               "description": "Error state flag"
            },
            "type": {
               "type": "string",
               "description": "Type of async medatata"
            },
            "successRecords": {
               "type": "number",
               "description": "Number of successful records. This number has no decimal places."
            },
            "percentageProcessed": {
               "type": "number",
               "description": "Percentage of records processed. This number has no decimal places."
            }
         },
         "required": [
            "asyncMetadataId",
            "messageBuffer",
            "totalRecords",
            "processedRecords",
            "failedRecords",
            "startDate",
            "lastUpdate",
            "inErrorState",
            "type",
            "successRecords",
            "percentageProcessed"
         ],
         "example": {
            "asyncMetadataId": 866307,
            "messageBuffer": "",
            "totalRecords": 0,
            "processedRecords": 0,
            "failedRecords": 0,
            "startDate": 1488384312000,
            "lastUpdate": 1488384312273,
            "inErrorState": false,
            "type": "MPE",
            "successRecords": 0,
            "percentageProcessed": 0
         }
      },
      "UDAPagination": {
         "type": "object",
         "description": "Standard pagination envelope response. UDA entries will be available in \"items\".",
         "properties": {
            "links": {
               "type": "array",
               "description": "Collection of page links. You will find up to 5 links:<ul><li>self - link to this same page<\/li><li>first - link to the first page<\/li><li>last - link to the last page<\/li><li>next - link to the next page. This will be only presented when there is a next page<\/li><li>previous - link to the previous page. This will be only presented when there is a previous page<\/li><\/ul>",
               "items": [
                  {
                     "$ref": "#/definitions/Link"
                  }
               ]
            },
            "items": {
               "type": "array",
               "description": "Array containing UDA entries.",
               "items": [
                  {
                     "$ref": "./api/def/uda.json#/UDA"
                  }
               ]
            }
         },
         "required": [
            "links",
            "items"
         ]
      },
      "Level": {
         "type": "object",
         "description": "A complete level object.",
         "properties": {
            "levelId": {
               "type": "number",
               "description": "The level identifier (Obs.: not required in POST APIs once is a new level that is being generated). This number has no decimal places."
            },
            "levelIdFather": {
               "type": "number",
               "description": "The father level identifier. When the level is a root, its levelIdFather is <b>null<\/b>."
            },
            "name": {
               "type": "string",
               "description": "The level name."
            },
            "nameSource": {
               "type": "string",
               "description": "The level name without special chars (including space). Example: If the level name is \"Turma da Mônica\" the nameSource will be \"turma-da-monica\"."
            },
            "description": {
               "type": "string",
               "description": "The level description."
            },
            "active": {
               "type": "boolean",
               "description": "<b>true<\/b> if level is active, i.e., if the level should be visible in website."
            },
            "homeId": {
               "type": "number",
               "description": "If this level have a home in the website that is not the default one, this is the home ID."
            },
            "homeIdProduct": {
               "type": "number",
               "description": "If the products in this category have a home in the website that is not the default one, this is the home ID."
            },
            "webAnalyticsId": {
               "type": "string",
               "description": "The web analytics identifier related with this level."
            },
            "metaKeywords": {
               "type": "string",
               "description": "The meta keywords information related with this level"
            },
            "metaDescription": {
               "type": "string",
               "description": "The meta description information related with this level"
            },
            "minimumStockQuantity": {
               "type": "number",
               "description": "The minimum stock quantity of products in this level."
            },
            "title": {
               "type": "string",
               "description": "The level title (is the information that is shown in website in meta \"title\" tag)"
            },
            "visibleValues": {
               "type": "boolean",
               "description": "<b>true<\/b> if the title field should be visible in website"
            },
            "urlSpecial": {
               "type": "string",
               "description": "An special URL path in which this level should lead instead of the normal path"
            },
            "redirectType": {
               "type": "string",
               "description": "The type of redirection. Possible values are PERMANENT (http code 301), TEMPORARY (http code 302) and PROXY (redirect is internal, user doesn't know about it)"
            },
            "quantityItemAvailable": {
               "type": "number",
               "description": "Deprecated: This is here for backward compatibility. This number has no decimal places."
            },
            "maxQuantityReserve": {
               "type": "number",
               "description": "The maximum number os pieces that can be reserved on products in this level."
            },
            "position": {
               "type": "number",
               "description": "The position of the level relative to the other levels of the same hierarchy. This number has no decimal places."
            },
            "visibleDescription": {
               "type": "boolean",
               "description": "<b>true<\/b> if the description should be visible in the website"
            },
            "visibleKeywords": {
               "type": "boolean",
               "description": "<b>true<\/b> if the keywords should be visible in the website"
            },
            "externalCode": {
               "type": "string",
               "description": "External codes for this level"
            },
            "metaRobots": {
               "type": "string",
               "description": "Value of meta \"robots\" html tag"
            },
            "tagHeading1": {
               "type": "string",
               "description": "The tag heading 1 (H1)"
            }
         },
         "required": [
            "levelId",
            "name",
            "nameSource",
            "active",
            "visibleDescription",
            "visibleKeywords"
         ],
         "example": {
            "levelId": 23375,
            "levelIdFather": 12334,
            "name": "Estabilizadores & Filtro de Linha",
            "nameSource": "estabilizadores-filtro-de-linha",
            "description": "Estabilizadores & Filtro de Linha",
            "active": true,
            "homeId": 12,
            "homeIdProduct": 123,
            "webAnalyticsId": "",
            "metaKeywords": "Estabilizadores Filtro Linha",
            "metaDescription": "Estabilizadores Filtro Linha",
            "minimumStockQuantity": 0,
            "title": "Estabilizadores & Filtro de Linha | Marca ABC",
            "visibleValues": true,
            "urlSpecial": "/estabilizadores/estabilizadores-filtro-de-linha-23232",
            "redirectType": "PERMANENT",
            "maxQuantityReserve": 1000,
            "position": 1,
            "visibleDescription": true,
            "visibleKeywords": true,
            "externalCode": "2900 120",
            "metaRobots": "meta-robots-001",
            "tagHeading1": "tag-teste-1"
         }
      },
      "LevelList": {
         "type": "object",
         "description": "The list of levels informations.",
         "properties": {
            "levelId": {
               "type": "number",
               "description": "The level identifier (Obs.: not required in POST APIs once is a new level that is being generated). This number has no decimal places."
            },
            "levelIdFather": {
               "type": "number",
               "description": "The father level identifier. When the level is a root, its levelIdFather is <b>null<\/b>."
            },
            "name": {
               "type": "string",
               "description": "The level name."
            },
            "nameSource": {
               "type": "string",
               "description": "The level name without special chars (including space). Example: If the level name is \"Turma da Mônica\" the nameSource will be \"turma-da-monica\"."
            },
            "description": {
               "type": "string",
               "description": "The level description."
            },
            "active": {
               "type": "boolean",
               "description": "<b>true<\/b> if level is active, i.e., if the level should be visible in website."
            },
            "homeId": {
               "type": "number",
               "description": "If this level have a home in the website that is not the default one, this is the home ID."
            },
            "homeIdProduct": {
               "type": "number",
               "description": "If the products in this category have a home in the website that is not the default one, this is the home ID."
            },
            "webAnalyticsId": {
               "type": "string",
               "description": "The web analytics identifier related with this level."
            },
            "metaKeywords": {
               "type": "string",
               "description": "The meta keywords information related with this level"
            },
            "metaDescription": {
               "type": "string",
               "description": "The meta description information related with this level"
            },
            "minimumStockQuantity": {
               "type": "number",
               "description": "The minimum stock quantity of products in this level."
            },
            "title": {
               "type": "string",
               "description": "The level title (is the information that is shown in website in meta \"title\" tag)"
            },
            "visibleValues": {
               "type": "boolean",
               "description": "<b>true<\/b> if the title field should be visible in website"
            },
            "urlSpecial": {
               "type": "string",
               "description": "An special URL path in which this level should lead instead of the normal path"
            },
            "redirectType": {
               "type": "string",
               "description": "The type of redirection. Possible values are PERMANENT (http code 301), TEMPORARY (http code 302) and PROXY (redirect is internal, user doesn't know about it)"
            },
            "quantityItemAvailable": {
               "type": "number",
               "description": "Deprecated: This is here for backward compatibility. This number has no decimal places."
            },
            "maxQuantityReserve": {
               "type": "number",
               "description": "The maximum number os pieces that can be reserved on products in this level."
            },
            "position": {
               "type": "number",
               "description": "The position of the level relative to the other levels of the same hierarchy. This number has no decimal places."
            },
            "visibleDescription": {
               "type": "boolean",
               "description": "<b>true<\/b> if the description should be visible in the website"
            },
            "visibleKeywords": {
               "type": "boolean",
               "description": "<b>true<\/b> if the keywords should be visible in the website"
            },
            "externalCode": {
               "type": "string",
               "description": "External codes for this level"
            },
            "metaRobots": {
               "type": "string",
               "description": "Value of meta \"robots\" html tag"
            },
            "tagHeading1": {
               "type": "string",
               "description": "The tag heading 1 (H1)"
            }
         },
         "required": [
            "levelId",
            "name",
            "nameSource",
            "active",
            "visibleDescription",
            "visibleKeywords"
         ],
         "example": [
            {
               "levelId": 23375,
               "levelIdFather": 12334,
               "name": "Estabilizadores & Filtro de Linha",
               "nameSource": "estabilizadores-filtro-de-linha",
               "description": "Estabilizadores & Filtro de Linha",
               "active": true,
               "homeId": 12,
               "homeIdProduct": 123,
               "webAnalyticsId": "",
               "metaKeywords": "Estabilizadores Filtro Linha",
               "metaDescription": "Estabilizadores Filtro Linha",
               "minimumStockQuantity": 0,
               "title": "Estabilizadores & Filtro de Linha | Marca ABC",
               "visibleValues": true,
               "urlSpecial": "/estabilizadores/estabilizadores-filtro-de-linha-23232",
               "redirectType": "PERMANENT",
               "maxQuantityReserve": 1000,
               "position": 1,
               "visibleDescription": true,
               "visibleKeywords": true,
               "externalCode": "2900 120",
               "metaRobots": "meta-robots-001",
               "tagHeading1": "tag-teste-1"
            }
         ]
      },
      "LevelShort": {
         "type": "object",
         "description": "A short version of level object.",
         "properties": {
            "levelId": {
               "type": "number",
               "description": "The level identifier. This number has no decimal places."
            },
            "levelIdFather": {
               "type": "number",
               "description": "The father level identifier."
            },
            "name": {
               "type": "string",
               "description": "The level name"
            },
            "levels": {
               "type": "array",
               "description": "The list of related sublevels",
               "items": [
                  {
                     "$ref": "#/definitions/LevelShort"
                  }
               ]
            }
         },
         "required": [
            "levelId",
            "name"
         ],
         "example": {
            "levelId": 23375,
            "name": "Eletrônicos",
            "levels": [
               {
                  "levelId": 23383,
                  "levelIdFather": 23375,
                  "name": "Vídeo Games",
                  "levels": []
               },
               {
                  "levelId": 23384,
                  "levelIdFather": 23375,
                  "name": "MP3 Players",
                  "levels": []
               }
            ]
         }
      },
      "GeneralParameterValueType": {
         "type": "object",
         "description": "The general parameter value type.",
         "properties": {
            "valueType": {
               "type": "string",
               "description": "A single character that describes the value type. The most common types are B, D, E, I, L, S, and T."
            },
            "description": {
               "type": "string",
               "description": "The general parameter description. The most common types are boolean, date, encoded, integer, list, number, string and time."
            }
         },
          "required": [
            "valueType",
            "description"
         ],
         "example": {
            "valueType": "B",
            "description": "boolean"
         }
      },
      "GeneralParameterGroup": {
         "type": "object",
         "description": "The general parameter group.",
         "properties": {
            "generalParameterGroupId": {
               "type": "number",
               "description": "The unique general parameter group identifier."
            },
            "name": {
               "type": "string",
               "description": "The general parameter group name."
            },
            "description": {
               "type": "string",
               "description": "The general parameter group description."
            },
            "sourceName": {
               "type": "string",
               "description": "The general parameter group source name identifier."
            }
         },
         "required": [
            "generalParameterGroupId",
            "name",
            "description"
         ],
         "example": {
            "generalParameterGroupId": 10,
            "name": "Integrações",
            "description": "Integrações da plataforma",
            "sourceName": "Integration"
         }
      },
      "GeneralParameterList": {
         "type": "object",
         "description": "The General parameter response.",
         "properties": {
            "key1": {
                "type": "string",
                "description": "The name of the field is the name of the general parameters and the value is the general parameters itself."
            },
            "key2": {
                "type": "string",
                "description": "The name of the field is the name of the general parameters and the value is the general parameters itself."
            },
            "keyN": {
                "type": "string",
                "description": "The name of the field is the name of the general parameters and the value is the general parameters itself."
            }
         },
         "example": {
            "DEFAULT_TIMEZONE": "America/Sao_Paulo",
            "ONLINE_EMAIL_ENABLED": "true"
         }
      },
	  "GeneralParameterPaginated": {
         "type": "object",
         "description": "Standard pagination envelope response. General Parameter entries will be available in \"items\".",
         "properties": {
            "links": {
               "type": "array",
               "description": "Collection of page links. You will find up to 5 links:<ul><li>self - link to this same page<\/li><li>first - link to the first page<\/li><li>last - link to the last page<\/li><li>next - link to the next page. This will be only presented when there is a next page<\/li><li>previous - link to the previous page. This will be only presented when there is a previous page<\/li><\/ul>.",
               "items": [
                  {
                     "$ref": "#/definitions/Link"
                  }
               ]
            },
            "items": {
               "type": "array",
               "description": "The List of General Parameter information.",
               "items": [
                  {
                     "$ref": "#/definitions/GeneralParameterResponse"
                  }
               ]
            }
         },
         "required": [
            "links",
            "items"
         ]
      },
      "GeneralParameterResponse": {
         "type": "object",
         "description": "The general parameter response.",
         "properties": {
            "generalParameterId": {
               "type": "string",
               "description": "The general parameter property identification. Is required in the PUT API."
            },
            "description": {
               "type": "string",
               "description": "The general parameter property description."
            },
            "generalParameterGroupId": {
               "type": "number",
               "description": "The unique general parameter group identifier. "
            },
            "valueType": {
               "type": "string",
               "description": "A single character that describes the value type. The most common types are B (boolean), D (date), E (encoded), I (integer), L (list), N (number), S (string) and T (time)."
            },
            "value": {
               "type": "string",
               "description": "The general parameter value"
            },
            "valueList": {
               "type": "string",
               "description": "The general parameter value list options when the value type is L (list). Required when value type is L (list)."
            },
            "updateDate": {
               "type": "string",
               "description": "The date when the general parameter was updated."
            }
         },
         "required": [
            "generalParameterId"
         ],
         "example": {
            "generalParameterId": "DEFAULT_TIMEZONE",
            "description": "The default timezone general parameter",
            "generalParameterGroupId": 10,
            "valueType": "S",
            "value": "America/Sao_Paulo",
            "updateDate": "2017-04-10T16:22:31-0300"
         }
      },
      "LevelPagination": {
         "type": "object",
         "description": "Standard pagination envelope response. Level entries will be available in \"items\".",
         "properties": {
            "links": {
               "type": "array",
               "description": "Collection of page links. You will find up to 5 links:<ul><li>self - link to this same page<\/li><li>first - link to the first page<\/li><li>last - link to the last page<\/li><li>next - link to the next page. This will be only presented when there is a next page<\/li><li>previous - link to the previous page. This will be only presented when there is a previous page<\/li><\/ul>.",
               "items": [
                  {
                     "$ref": "#/definitions/Link"
                  }
               ]
            },
            "items": {
               "type": "array",
               "description": "Array containing Level entries.",
               "items": [
                  {
                     "$ref": "#/definitions/Level"
                  }
               ]
            }
         },
         "required": [
            "links",
            "items"
         ]
      },
      "Tag": {
         "type": "object",
         "description": "The Tag information",
         "example": {
            "TagId": 123654,
            "name": "Main Home - banner center"
         },
         "properties": {
            "tagId": {
               "type": "number",
               "description": "The tag id is a unique identifier for the tag"
            },
            "name": {
               "type": "string",
               "description": "The name for this specific tag"
            },
            "required": [
               "name"
            ]
         }
      },
      "Campaign": {
         "type": "object",
         "description": "The campaign information.",
         "example": {
            "campaignId": 216,
            "name": "Teste Campaign",
            "active": true,
            "beginDate": "2017-01-28T11:19:10-0300",
            "endDate": "2017-01-29T11:19:10-0300"
         },
         "properties": {
            "campaignId": {
               "type": "number",
               "description": "The campaign id is a unique identifier for the campaign. This number has no decimal places and is required only on PUT API."
            },
            "name": {
               "type": "string",
               "description": "The name for this specific campaign. Is required in the POST API."
            },
            "active": {
               "type": "boolean",
               "description": "Flag to active or deactive the campaign = ['TRUE', 'FALSE']. Is required in the POST API."
            },
            "beginDate": {
               "type": "string",
               "description": "The initial date that the campaign is available. Is required in the POST API."
            },
            "endDate": {
               "type": "string",
               "description": "The final date that the campaign is available. Is required in the POST API."
            }
         }
      }
   }
}
