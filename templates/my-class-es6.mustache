/*jshint -W069 */
/**
 * {{&description}}
 * @class {{&className}}
 * @param {(string|object)} [domainOrOptions] - The project domain or options object. If object, see the object's optional properties.
 * @param {string} [domainOrOptions.domain] - The project domain
 * @param {object} [domainOrOptions.token] - auth token - object with value property and optional headerOrQueryName and isQuery properties
 */
var {{&className}} = (function(){
	'use strict';

	function {{&className}}(options){
		var domain = (typeof options === 'object') ? options.domain : options;
		this.domain = domain ? domain : '{{&domain}}';
		if(this.domain.length === 0) {
			throw new Error('Domain parameter must be specified as a string.');
		}
		{{#isSecure}}
			this.token = (typeof options === 'object') ? (options.token ? options.token : {}) : {};
		{{/isSecure}}
	}

	{{&className}}.prototype.reject = function(message){
		return Promise.reject(message);
	};

	{{&className}}.prototype.request = function(method, url, parameters, body, headers, queryParameters, form){
		var req = {
			method: method,
			url: url,
			params: queryParameters,
			headers: headers,
			body: body
		};
		if(Object.keys(form).length > 0) {
			req.form = form;
		}
		if(typeof(body) === 'object' && !(body instanceof Buffer)) {
			req.json = true;
		}
		return axios(req);
	};

	{{#methods}}
		{{> method}}
	{{/methods}}

	return {{&className}};
})();
